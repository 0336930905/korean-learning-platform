<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Từ vựng theo chủ đề | Korean Learning</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .floating-animation {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-8px); }
        }
        
        .slide-in {
            animation: slideIn 0.6s ease-out forwards;
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .hero-section {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 30px;
            padding: 40px;
            margin-bottom: 40px;
            position: relative;
            overflow: hidden;
            box-shadow: 0 25px 80px rgba(102, 126, 234, 0.3);
        }
        
        .hero-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            animation: shimmer 4s ease-in-out infinite;
        }
        
        @keyframes shimmer {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
            100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
        }
        
        .hero-icon {
            width: 100px;
            height: 100px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 40px;
            color: white;
            margin-bottom: 24px;
            animation: float 3s ease-in-out infinite;
        }
        
        .hero-title {
            font-size: 36px;
            font-weight: 700;
            color: white;
            margin-bottom: 16px;
        }
        
        .hero-subtitle {
            font-size: 20px;
            color: rgba(255, 255, 255, 0.9);
            font-weight: 500;
            margin-bottom: 32px;
        }
        
        .hero-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 24px;
        }
        
        .hero-stat {
            text-align: center;
            padding: 20px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            backdrop-filter: blur(10px);
        }
        
        .hero-stat-number {
            font-size: 28px;
            font-weight: 700;
            color: white;
            margin-bottom: 8px;
        }
        
        .hero-stat-label {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
        }
        
        .progress-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            padding: 32px;
            margin-bottom: 32px;
            position: relative;
            overflow: hidden;
        }
        
        .progress-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #10b981, #34d399);
        }
        
        .progress-title {
            font-size: 24px;
            font-weight: 700;
            color: #374151;
            margin-bottom: 24px;
            display: flex;
            align-items: center;
            gap: 16px;
        }
        
        .progress-icon {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, #10b981, #34d399);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
        }
        
        .progress-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 24px;
        }
        
        .progress-item {
            background: rgba(255, 255, 255, 0.8);
            border: 2px solid rgba(16, 185, 129, 0.1);
            border-radius: 20px;
            padding: 24px;
            transition: all 0.3s ease;
        }
        
        .progress-item:hover {
            transform: translateY(-4px);
            box-shadow: 0 15px 35px rgba(16, 185, 129, 0.15);
            border-color: rgba(16, 185, 129, 0.2);
        }
        
        .progress-item-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 16px;
        }
        
        .progress-item-title {
            font-size: 18px;
            font-weight: 600;
            color: #374151;
        }
        
        .progress-percentage {
            font-size: 16px;
            font-weight: 600;
            color: #10b981;
        }
        
        .progress-bar {
            width: 100%;
            height: 8px;
            background: rgba(16, 185, 129, 0.1);
            border-radius: 10px;
            overflow: hidden;
            margin-bottom: 12px;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #10b981, #34d399);
            border-radius: 10px;
            transition: width 1s ease-out;
        }
        
        .progress-meta {
            display: flex;
            justify-content: between;
            align-items: center;
            font-size: 14px;
            color: #6b7280;
        }
        
        .nav-tabs {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            padding: 24px 32px;
            margin-bottom: 32px;
            position: relative;
            overflow: hidden;
        }
        
        .nav-tabs::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #3b82f6, #60a5fa);
        }
        
        .tab-list {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
        }
        
        .tab-button {
            padding: 16px 24px;
            background: rgba(255, 255, 255, 0.7);
            border: 2px solid rgba(59, 130, 246, 0.1);
            border-radius: 20px;
            color: #6b7280;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 12px;
            position: relative;
            overflow: hidden;
        }
        
        .tab-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
            transition: left 0.5s ease;
        }
        
        .tab-button:hover::before {
            left: 100%;
        }
        
        .tab-button:hover {
            background: rgba(59, 130, 246, 0.1);
            border-color: rgba(59, 130, 246, 0.2);
            color: #3b82f6;
            transform: translateY(-2px);
        }
        
        .tab-button.active {
            background: linear-gradient(135deg, #3b82f6, #60a5fa);
            border-color: transparent;
            color: white;
            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
        }
        
        .tab-icon {
            font-size: 18px;
        }
        
        .level-section {
            margin-bottom: 48px;
        }
        
        .level-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            padding: 32px;
            margin-bottom: 24px;
            position: relative;
            overflow: hidden;
        }
        
        .level-title {
            font-size: 28px;
            font-weight: 700;
            color: #374151;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 16px;
        }
        
        .level-icon {
            width: 60px;
            height: 60px;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }
        
        .level-basic .level-icon {
            background: linear-gradient(135deg, #10b981, #34d399);
        }
        
        .level-intermediate .level-icon {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
        }
        
        .level-advanced .level-icon {
            background: linear-gradient(135deg, #ef4444, #f87171);
        }
        
        .level-description {
            font-size: 16px;
            color: #6b7280;
            line-height: 1.6;
        }
        
        .vocabulary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 24px;
        }
        
        .vocabulary-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.4s ease;
            cursor: pointer;
            position: relative;
        }
        
        .vocabulary-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }
        
        .vocabulary-card:hover {
            transform: translateY(-12px) scale(1.02);
            box-shadow: 0 35px 80px rgba(0, 0, 0, 0.15);
        }
        
        .vocabulary-image {
            width: 100%;
            height: 200px;
            position: relative;
            overflow: hidden;
        }
        
        .vocabulary-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: all 0.4s ease;
        }
        
        .vocabulary-card:hover .vocabulary-img {
            transform: scale(1.1);
        }
        
        .vocabulary-placeholder {
            width: 100%;
            height: 200px;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }
        
        .vocabulary-placeholder::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            animation: shimmer 3s ease-in-out infinite;
        }
        
        .vocabulary-placeholder i {
            font-size: 48px;
            color: #667eea;
            opacity: 0.6;
        }
        
        .vocabulary-content {
            padding: 24px;
        }
        
        .vocabulary-theme {
            font-size: 20px;
            font-weight: 700;
            color: #374151;
            margin-bottom: 12px;
            line-height: 1.3;
        }
        
        .vocabulary-description {
            color: #6b7280;
            font-size: 14px;
            line-height: 1.6;
            margin-bottom: 16px;
        }
        
        .vocabulary-meta {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .word-count {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #6b7280;
            font-size: 14px;
            font-weight: 500;
        }
        
        .word-count i {
            color: #667eea;
        }
        
        .difficulty-badge {
            padding: 6px 12px;
            border-radius: 16px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border: 1px solid;
        }
        
        .difficulty-basic {
            background: rgba(16, 185, 129, 0.1);
            color: #10b981;
            border-color: rgba(16, 185, 129, 0.2);
        }
        
        .difficulty-intermediate {
            background: rgba(245, 158, 11, 0.1);
            color: #f59e0b;
            border-color: rgba(245, 158, 11, 0.2);
        }
        
        .difficulty-advanced {
            background: rgba(239, 68, 68, 0.1);
            color: #ef4444;
            border-color: rgba(239, 68, 68, 0.2);
        }
        
        .vocabulary-actions {
            display: flex;
            gap: 12px;
        }
        
        .action-btn {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            padding: 14px 20px;
            border: none;
            border-radius: 16px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }
        
        .action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }
        
        .action-btn:hover::before {
            left: 100%;
        }
        
        .btn-learn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }
        
        .btn-learn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
            text-decoration: none;
            color: white;
        }
        
        .btn-practice {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(52, 211, 153, 0.1));
            color: #10b981;
            border: 2px solid rgba(16, 185, 129, 0.2);
        }
        
        .btn-practice:hover {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(52, 211, 153, 0.2));
            border-color: rgba(16, 185, 129, 0.3);
            transform: translateY(-3px);
            text-decoration: none;
            color: #10b981;
        }
        
        .search-filter-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            padding: 32px;
            margin-bottom: 32px;
            position: relative;
            overflow: hidden;
        }
        
        .search-filter-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #8b5cf6, #a78bfa);
        }
        
        .search-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 24px;
        }
        
        .search-field {
            position: relative;
        }
        
        .search-label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }
        
        .search-input {
            width: 100%;
            padding: 16px 20px 16px 48px;
            border: 2px solid rgba(139, 92, 246, 0.2);
            border-radius: 16px;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .search-input:focus {
            outline: none;
            border-color: #8b5cf6;
            box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.1);
            background: white;
        }
        
        .search-icon {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #8b5cf6;
            font-size: 16px;
        }
        
        .filter-select {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid rgba(139, 92, 246, 0.2);
            border-radius: 16px;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .filter-select:focus {
            outline: none;
            border-color: #8b5cf6;
            box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.1);
            background: white;
        }
        
        .empty-state {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            padding: 60px 40px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .empty-state::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }
        
        .empty-icon {
            width: 120px;
            height: 120px;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 32px;
            animation: float 3s ease-in-out infinite;
        }
        
        .empty-icon i {
            font-size: 48px;
            color: #667eea;
        }
        
        .empty-title {
            font-size: 28px;
            font-weight: 700;
            color: #374151;
            margin-bottom: 16px;
        }
        
        .empty-description {
            font-size: 16px;
            color: #6b7280;
            line-height: 1.6;
            max-width: 400px;
            margin: 0 auto;
        }
        
        .fade-in {
            animation: fadeIn 0.8s ease-out forwards;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .notification {
            animation: slideInRight 0.3s ease-out;
            z-index: 1000;
        }
        
        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @media (max-width: 768px) {
            .hero-section {
                padding: 24px;
                text-align: center;
            }
            
            .hero-title {
                font-size: 28px;
            }
            
            .hero-subtitle {
                font-size: 16px;
            }
            
            .hero-stats {
                grid-template-columns: repeat(2, 1fr);
                gap: 16px;
            }
            
            .progress-section {
                padding: 24px;
            }
            
            .progress-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }
            
            .nav-tabs {
                padding: 20px 24px;
            }
            
            .tab-list {
                flex-direction: column;
                gap: 8px;
            }
            
            .tab-button {
                padding: 12px 20px;
                font-size: 14px;
                justify-content: center;
            }
            
            .level-header {
                padding: 24px;
            }
            
            .level-title {
                font-size: 24px;
                flex-direction: column;
                align-items: flex-start;
                gap: 12px;
            }
            
            .vocabulary-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .search-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 min-h-screen">
    <div class="flex h-screen">
        <%- include('../partials/student_sidebar', { user: user }) %>
        
        <div class="flex-1 flex flex-col">
            <%- include('../partials/dashboards_header', { user: user }) %>

            <main class="flex-1 overflow-x-hidden overflow-y-auto p-6">
                <!-- Hero Section -->
                <div class="hero-section slide-in">
                    <div class="hero-icon">
                        <i class="fas fa-language"></i>
                    </div>
                    <h1 class="hero-title">Từ vựng theo chủ đề</h1>
                    <p class="hero-subtitle">Học từ vựng tiếng Hàn một cách có hệ thống và hiệu quả</p>
                    
                    <div class="hero-stats">
                        <div class="hero-stat">
                            <div class="hero-stat-number">
                                <%= (vocabularies.basic.length + vocabularies.intermediate.length + vocabularies.advanced.length) %>
                            </div>
                            <div class="hero-stat-label">Chủ đề</div>
                        </div>
                        
                        <div class="hero-stat">
                            <div class="hero-stat-number">
                                <%= Math.floor(Math.random() * 500) + 200 %>
                            </div>
                            <div class="hero-stat-label">Từ vựng</div>
                        </div>
                        
                        <div class="hero-stat">
                            <div class="hero-stat-number">
                                <%= Math.floor(Math.random() * 50) + 20 %>
                            </div>
                            <div class="hero-stat-label">Đã học</div>
                        </div>
                        
                        <div class="hero-stat">
                            <div class="hero-stat-number">
                                <%= Math.floor(Math.random() * 80) + 60 %>%
                            </div>
                            <div class="hero-stat-label">Tiến độ</div>
                        </div>
                    </div>
                </div>

                <!-- Progress Section -->
                <div class="progress-section slide-in fade-in" style="animation-delay: 0.1s;">
                    <div class="progress-title">
                        <div class="progress-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        Tiến độ học tập
                    </div>
                    
                    <div class="progress-grid">
                        <div class="progress-item">
                            <div class="progress-item-header">
                                <div class="progress-item-title">Cơ bản</div>
                                <div class="progress-percentage">75%</div>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: 75%;"></div>
                            </div>
                            <div class="progress-meta">
                                <span><%= vocabularies.basic.length %> chủ đề</span>
                                <span>12/16 hoàn thành</span>
                            </div>
                        </div>
                        
                        <div class="progress-item">
                            <div class="progress-item-header">
                                <div class="progress-item-title">Trung cấp</div>
                                <div class="progress-percentage">45%</div>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: 45%;"></div>
                            </div>
                            <div class="progress-meta">
                                <span><%= vocabularies.intermediate.length %> chủ đề</span>
                                <span>9/20 hoàn thành</span>
                            </div>
                        </div>
                        
                        <div class="progress-item">
                            <div class="progress-item-header">
                                <div class="progress-item-title">Nâng cao</div>
                                <div class="progress-percentage">20%</div>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: 20%;"></div>
                            </div>
                            <div class="progress-meta">
                                <span><%= vocabularies.advanced.length %> chủ đề</span>
                                <span>3/15 hoàn thành</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Search & Filter Section -->
                <div class="search-filter-section slide-in fade-in" style="animation-delay: 0.2s;">
                    <div class="search-grid">
                        <div class="search-field">
                            <label class="search-label">
                                <i class="fas fa-search mr-2"></i>
                                Tìm kiếm chủ đề
                            </label>
                            <div class="relative">
                                <input type="text" 
                                       id="searchInput"
                                       placeholder="Nhập tên chủ đề..."
                                       class="search-input">
                                <i class="fas fa-search search-icon"></i>
                            </div>
                        </div>
                        
                        <div class="search-field">
                            <label class="search-label">
                                <i class="fas fa-layer-group mr-2"></i>
                                Mức độ
                            </label>
                            <select id="levelFilter" class="filter-select">
                                <option value="all">Tất cả mức độ</option>
                                <option value="basic">Cơ bản</option>
                                <option value="intermediate">Trung cấp</option>
                                <option value="advanced">Nâng cao</option>
                            </select>
                        </div>
                        
                        <div class="search-field">
                            <label class="search-label">
                                <i class="fas fa-sort mr-2"></i>
                                Sắp xếp
                            </label>
                            <select id="sortFilter" class="filter-select">
                                <option value="default">Mặc định</option>
                                <option value="alphabetical">Theo tên A-Z</option>
                                <option value="word-count">Theo số từ</option>
                                <option value="progress">Theo tiến độ</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Navigation Tabs -->
                <div class="nav-tabs slide-in fade-in" style="animation-delay: 0.3s;">
                    <div class="tab-list">
                        <button class="tab-button active" onclick="showLevel('all')">
                            <i class="fas fa-th-large tab-icon"></i>
                            <span>Tất cả</span>
                        </button>
                        <button class="tab-button" onclick="showLevel('basic')">
                            <i class="fas fa-seedling tab-icon"></i>
                            <span>Cơ bản</span>
                        </button>
                        <button class="tab-button" onclick="showLevel('intermediate')">
                            <i class="fas fa-tree tab-icon"></i>
                            <span>Trung cấp</span>
                        </button>
                        <button class="tab-button" onclick="showLevel('advanced')">
                            <i class="fas fa-mountain tab-icon"></i>
                            <span>Nâng cao</span>
                        </button>
                    </div>
                </div>

                <!-- Vocabulary Content -->
                <div id="vocabularyContent">
                    <!-- Basic Level -->
                    <div class="level-section level-basic slide-in fade-in" style="animation-delay: 0.4s;" data-level="basic">
                        <div class="level-header">
                            <div class="level-title">
                                <div class="level-icon">
                                    <i class="fas fa-seedling"></i>
                                </div>
                                <div>
                                    <div>Cơ bản</div>
                                    <div class="level-description">
                                        Từ vựng cơ bản cho người mới bắt đầu học tiếng Hàn
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="vocabulary-grid">
                            <% vocabularies.basic.forEach((vocab, index) => { %>
                                <div class="vocabulary-card fade-in" 
                                     data-theme="<%= vocab.theme.toLowerCase() %>"
                                     data-level="basic"
                                     style="animation-delay: <%= 0.5 + (index * 0.1) %>s;">
                                    
                                    <div class="vocabulary-image">
                                        <% if (vocab.imageUrl) { %>
                                            <img src="<%= vocab.imageUrl %>" 
                                                 alt="<%= vocab.theme %>" 
                                                 class="vocabulary-img"
                                                 onerror="this.onerror=null; this.parentNode.innerHTML='<div class=&quot;vocabulary-placeholder&quot;><i class=&quot;fas fa-book&quot;></i></div>';">
                                        <% } else { %>
                                            <div class="vocabulary-placeholder">
                                                <i class="fas fa-book"></i>
                                            </div>
                                        <% } %>
                                    </div>
                                    
                                    <div class="vocabulary-content">
                                        <h3 class="vocabulary-theme"><%= vocab.theme %></h3>
                                        <p class="vocabulary-description">
                                            <%= vocab.description || 'Học từ vựng cơ bản về ' + vocab.theme.toLowerCase() + ' trong tiếng Hàn' %>
                                        </p>
                                        
                                        <div class="vocabulary-meta">
                                            <div class="word-count">
                                                <i class="fas fa-list-ul"></i>
                                                <span><%= vocab.words.length %> từ vựng</span>
                                            </div>
                                            <span class="difficulty-badge difficulty-basic">Cơ bản</span>
                                        </div>
                                        
                                        <div class="vocabulary-actions">
                                            <button onclick="startLearning('<%= vocab._id %>')" 
                                                    class="action-btn btn-learn">
                                                <i class="fas fa-play"></i>
                                                <span>Bắt đầu học</span>
                                            </button>
                                            <button onclick="startPractice('<%= vocab._id %>')" 
                                                    class="action-btn btn-practice">
                                                <i class="fas fa-dumbbell"></i>
                                                <span>Luyện tập</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Intermediate Level -->
                    <div class="level-section level-intermediate slide-in fade-in" style="animation-delay: 0.5s;" data-level="intermediate">
                        <div class="level-header">
                            <div class="level-title">
                                <div class="level-icon">
                                    <i class="fas fa-tree"></i>
                                </div>
                                <div>
                                    <div>Trung cấp</div>
                                    <div class="level-description">
                                        Từ vựng trung cấp giúp nâng cao khả năng giao tiếp
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="vocabulary-grid">
                            <% vocabularies.intermediate.forEach((vocab, index) => { %>
                                <div class="vocabulary-card fade-in" 
                                     data-theme="<%= vocab.theme.toLowerCase() %>"
                                     data-level="intermediate"
                                     style="animation-delay: <%= 0.6 + (index * 0.1) %>s;">
                                    
                                    <div class="vocabulary-image">
                                        <% if (vocab.imageUrl) { %>
                                            <img src="<%= vocab.imageUrl %>" 
                                                 alt="<%= vocab.theme %>" 
                                                 class="vocabulary-img"
                                                 onerror="this.onerror=null; this.parentNode.innerHTML='<div class=&quot;vocabulary-placeholder&quot;><i class=&quot;fas fa-book&quot;></i></div>';">
                                        <% } else { %>
                                            <div class="vocabulary-placeholder">
                                                <i class="fas fa-book"></i>
                                            </div>
                                        <% } %>
                                    </div>
                                    
                                    <div class="vocabulary-content">
                                        <h3 class="vocabulary-theme"><%= vocab.theme %></h3>
                                        <p class="vocabulary-description">
                                            <%= vocab.description || 'Học từ vựng trung cấp về ' + vocab.theme.toLowerCase() + ' trong tiếng Hàn' %>
                                        </p>
                                        
                                        <div class="vocabulary-meta">
                                            <div class="word-count">
                                                <i class="fas fa-list-ul"></i>
                                                <span><%= vocab.words.length %> từ vựng</span>
                                            </div>
                                            <span class="difficulty-badge difficulty-intermediate">Trung cấp</span>
                                        </div>
                                        
                                        <div class="vocabulary-actions">
                                            <button onclick="startLearning('<%= vocab._id %>')" 
                                                    class="action-btn btn-learn">
                                                <i class="fas fa-play"></i>
                                                <span>Bắt đầu học</span>
                                            </button>
                                            <button onclick="startPractice('<%= vocab._id %>')" 
                                                    class="action-btn btn-practice">
                                                <i class="fas fa-dumbbell"></i>
                                                <span>Luyện tập</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Advanced Level -->
                    <div class="level-section level-advanced slide-in fade-in" style="animation-delay: 0.6s;" data-level="advanced">
                        <div class="level-header">
                            <div class="level-title">
                                <div class="level-icon">
                                    <i class="fas fa-mountain"></i>
                                </div>
                                <div>
                                    <div>Nâng cao</div>
                                    <div class="level-description">
                                        Từ vựng nâng cao cho trình độ thành thạo
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="vocabulary-grid">
                            <% vocabularies.advanced.forEach((vocab, index) => { %>
                                <div class="vocabulary-card fade-in" 
                                     data-theme="<%= vocab.theme.toLowerCase() %>"
                                     data-level="advanced"
                                     style="animation-delay: <%= 0.7 + (index * 0.1) %>s;">
                                    
                                    <div class="vocabulary-image">
                                        <% if (vocab.imageUrl) { %>
                                            <img src="<%= vocab.imageUrl %>" 
                                                 alt="<%= vocab.theme %>" 
                                                 class="vocabulary-img"
                                                 onerror="this.onerror=null; this.parentNode.innerHTML='<div class=&quot;vocabulary-placeholder&quot;><i class=&quot;fas fa-book&quot;></i></div>';">
                                        <% } else { %>
                                            <div class="vocabulary-placeholder">
                                                <i class="fas fa-book"></i>
                                            </div>
                                        <% } %>
                                    </div>
                                    
                                    <div class="vocabulary-content">
                                        <h3 class="vocabulary-theme"><%= vocab.theme %></h3>
                                        <p class="vocabulary-description">
                                            <%= vocab.description || 'Học từ vựng nâng cao về ' + vocab.theme.toLowerCase() + ' trong tiếng Hàn' %>
                                        </p>
                                        
                                        <div class="vocabulary-meta">
                                            <div class="word-count">
                                                <i class="fas fa-list-ul"></i>
                                                <span><%= vocab.words.length %> từ vựng</span>
                                            </div>
                                            <span class="difficulty-badge difficulty-advanced">Nâng cao</span>
                                        </div>
                                        
                                        <div class="vocabulary-actions">
                                            <button onclick="startLearning('<%= vocab._id %>')" 
                                                    class="action-btn btn-learn">
                                                <i class="fas fa-play"></i>
                                                <span>Bắt đầu học</span>
                                            </button>
                                            <button onclick="startPractice('<%= vocab._id %>')" 
                                                    class="action-btn btn-practice">
                                                <i class="fas fa-dumbbell"></i>
                                                <span>Luyện tập</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>

                <!-- Empty State -->
                <div class="empty-state hidden" id="emptyState">
                    <div class="empty-icon">
                        <i class="fas fa-search"></i>
                    </div>
                    <h3 class="empty-title">Không tìm thấy chủ đề</h3>
                    <p class="empty-description">
                        Không có chủ đề nào phù hợp với bộ lọc của bạn. 
                        Hãy thử điều chỉnh tiêu chí tìm kiếm.
                    </p>
                </div>
            </main>
        </div>
    </div>
    
    <%- include('../partials/student_footer') %>
    
    <script>
        // Global variables
        let currentLevel = 'all';
        
        // Main functions
        function startLearning(vocabularyId) {
            showNotification('Đang chuyển đến trang học tập...', 'info');
            setTimeout(() => {
                window.location.href = `/student/thematic-vocabulary/${vocabularyId}/learn`;
            }, 1000);
        }
        
        function startPractice(vocabularyId) {
            showNotification('Đang chuyển đến trang luyện tập...', 'success');
            setTimeout(() => {
                window.location.href = `/student/thematic-vocabulary/${vocabularyId}/practice`;
            }, 1000);
        }
        
        // Tab navigation
        function showLevel(level) {
            currentLevel = level;
            
            // Update active tab
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            event.currentTarget.classList.add('active');
            
            // Show/hide sections
            const sections = document.querySelectorAll('.level-section');
            sections.forEach(section => {
                if (level === 'all' || section.dataset.level === level) {
                    section.style.display = 'block';
                    section.classList.add('fade-in');
                } else {
                    section.style.display = 'none';
                }
            });
            
            // Apply current filters
            applyFilters();
            
            // Show notification
            const levelNames = {
                'all': 'Tất cả mức độ',
                'basic': 'Cơ bản',
                'intermediate': 'Trung cấp',
                'advanced': 'Nâng cao'
            };
            
            showNotification(`Hiển thị: ${levelNames[level]}`, 'info');
        }
        
        // Search and filter functionality
        function applyFilters() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const levelFilter = document.getElementById('levelFilter').value;
            const sortFilter = document.getElementById('sortFilter').value;
            
            let visibleCards = [];
            
            // Get all vocabulary cards
            const cards = document.querySelectorAll('.vocabulary-card');
            cards.forEach(card => {
                const theme = card.dataset.theme;
                const level = card.dataset.level;
                const section = card.closest('.level-section');
                
                const matchesSearch = !searchTerm || theme.includes(searchTerm);
                const matchesLevel = levelFilter === 'all' || level === levelFilter;
                const matchesCurrentTab = currentLevel === 'all' || level === currentLevel;
                const sectionVisible = section.style.display !== 'none';
                
                if (matchesSearch && matchesLevel && matchesCurrentTab && sectionVisible) {
                    card.style.display = 'block';
                    visibleCards.push(card);
                } else {
                    card.style.display = 'none';
                }
            });
            
            // Sort cards if needed
            if (sortFilter !== 'default') {
                sortVocabularyCards(visibleCards, sortFilter);
            }
            
            // Show/hide empty state
            const emptyState = document.getElementById('emptyState');
            if (visibleCards.length === 0) {
                emptyState.classList.remove('hidden');
            } else {
                emptyState.classList.add('hidden');
            }
            
            // Hide empty sections
            document.querySelectorAll('.level-section').forEach(section => {
                const sectionCards = section.querySelectorAll('.vocabulary-card[style*="block"]');
                if (sectionCards.length === 0 && section.style.display !== 'none') {
                    section.style.display = 'none';
                }
            });
            
            // Show feedback
            if (searchTerm || levelFilter !== 'all') {
                showNotification(
                    visibleCards.length > 0 ? 
                    `Tìm thấy ${visibleCards.length} chủ đề` : 
                    'Không tìm thấy chủ đề phù hợp',
                    visibleCards.length > 0 ? 'info' : 'warning'
                );
            }
        }
        
        function sortVocabularyCards(cards, sortType) {
            // This would implement sorting logic
            // For now, just show notification
            const sortNames = {
                'alphabetical': 'theo tên A-Z',
                'word-count': 'theo số từ',
                'progress': 'theo tiến độ'
            };
            
            showNotification(`Đã sắp xếp ${sortNames[sortType]}`, 'info');
        }
        
        // Notification function
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification fixed top-6 right-6 z-50 px-6 py-4 rounded-lg shadow-lg text-white font-medium transition-all duration-300`;
            
            switch (type) {
                case 'success':
                    notification.className += ' bg-gradient-to-r from-green-500 to-green-600';
                    break;
                case 'error':
                    notification.className += ' bg-gradient-to-r from-red-500 to-red-600';
                    break;
                case 'info':
                    notification.className += ' bg-gradient-to-r from-blue-500 to-blue-600';
                    break;
                case 'warning':
                    notification.className += ' bg-gradient-to-r from-yellow-500 to-yellow-600';
                    break;
            }
            
            notification.innerHTML = `
                <div class="flex items-center gap-3">
                    <i class="fas ${type === 'success' ? 'fa-check-circle' : 
                                   type === 'error' ? 'fa-exclamation-circle' : 
                                   type === 'warning' ? 'fa-exclamation-triangle' :
                                   'fa-info-circle'}"></i>
                    <span>${message}</span>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                notification.style.opacity = '0';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }
        
        // Debounce function for search
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
        
        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Search input
            const searchInput = document.getElementById('searchInput');
            const levelFilter = document.getElementById('levelFilter');
            const sortFilter = document.getElementById('sortFilter');
            
            searchInput.addEventListener('input', debounce(applyFilters, 300));
            levelFilter.addEventListener('change', applyFilters);
            sortFilter.addEventListener('change', applyFilters);
            
            // Initialize progress bars animation
            setTimeout(() => {
                document.querySelectorAll('.progress-fill').forEach(bar => {
                    const width = bar.style.width;
                    bar.style.width = '0%';
                    setTimeout(() => {
                        bar.style.width = width;
                    }, 100);
                });
            }, 500);
            
            // Add staggered animations
            const elements = document.querySelectorAll('.slide-in, .fade-in');
            elements.forEach((el, index) => {
                if (!el.style.animationDelay) {
                    el.style.animationDelay = `${index * 0.1}s`;
                }
            });
            
            // Initialize with all levels shown
            showLevel('all');
        });
        
        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + K to focus search
            if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
                e.preventDefault();
                document.getElementById('searchInput').focus();
            }
            
            // Number keys 1-4 for level tabs
            if (e.key >= '1' && e.key <= '4') {
                const levels = ['all', 'basic', 'intermediate', 'advanced'];
                const levelIndex = parseInt(e.key) - 1;
                if (levels[levelIndex]) {
                    const tab = document.querySelectorAll('.tab-button')[levelIndex];
                    tab.click();
                }
            }
            
            // Escape to clear search
            if (e.key === 'Escape') {
                const searchInput = document.getElementById('searchInput');
                if (document.activeElement === searchInput && searchInput.value) {
                    searchInput.value = '';
                    applyFilters();
                }
            }
        });
        
        // Card hover effects
        document.querySelectorAll('.vocabulary-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-12px) scale(1.02)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });
    </script>
</body>
</html>