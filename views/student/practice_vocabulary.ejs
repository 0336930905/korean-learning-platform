<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Luyện tập từ vựng | <%= vocabulary.theme %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <!-- Add Web Speech API polyfill for better browser compatibility -->
    <script src="https://cdn.jsdelivr.net/npm/speech-synthesis-polyfill@1.0.0/dist/speech-synthesis-polyfill.min.js"></script>
    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .floating-animation {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-8px); }
        }
        
        .slide-in {
            animation: slideIn 0.6s ease-out forwards;
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Animation cho phản hồi ngay lập tức */
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); box-shadow: 0 0 20px rgba(16, 185, 129, 0.4); }
            100% { transform: scale(1); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        
        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        /* Practice Game Styles */
        .practice-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .practice-header {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
            color: white;
            padding: 32px;
            border-radius: 25px;
            text-align: center;
            margin-bottom: 32px;
            box-shadow: 0 20px 60px rgba(245, 158, 11, 0.3);
        }
        
        .practice-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            padding: 40px;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            min-height: 500px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            position: relative;
        }
        
        .practice-word {
            font-size: 64px;
            font-weight: 700;
            color: #374151;
            margin-bottom: 24px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .practice-meaning {
            font-size: 24px;
            color: #6b7280;
            margin-bottom: 32px;
            opacity: 0;
            transition: all 0.3s ease;
        }
        
        .practice-meaning.show {
            opacity: 1;
        }
        
        .practice-controls {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 32px;
        }
        
        .practice-btn {
            padding: 16px 32px;
            border-radius: 15px;
            border: none;
            cursor: pointer;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-audio {
            background: linear-gradient(135deg, #3b82f6, #60a5fa);
            color: white;
        }
        
        .btn-audio:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(59, 130, 246, 0.4);
        }
        
        .btn-reveal {
            background: linear-gradient(135deg, #10b981, #34d399);
            color: white;
        }
        
        .btn-reveal:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(16, 185, 129, 0.4);
        }
        
        .btn-next {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
            color: white;
        }
        
        .btn-next:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(245, 158, 11, 0.4);
        }
        
        .btn-finish {
            background: linear-gradient(135deg, #8b5cf6, #a78bfa);
            color: white;
        }
        
        .btn-finish:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(139, 92, 246, 0.4);
        }
        
        .practice-progress {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.1);
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            color: #374151;
        }
        
        .practice-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 32px;
        }
        
        .stat-box {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
        }
        
        .stat-value {
            font-size: 32px;
            font-weight: 700;
            color: #374151;
        }
        
        .stat-label {
            font-size: 14px;
            color: #6b7280;
            margin-top: 8px;
        }
        
        /* Practice Mode Types */
        .mode-selector {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 32px;
        }
        
        .mode-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            padding: 24px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .mode-card:hover {
            transform: translateY(-5px);
            border-color: #f59e0b;
            box-shadow: 0 15px 35px rgba(245, 158, 11, 0.2);
        }
        
        .mode-card.selected {
            border-color: #f59e0b;
            background: linear-gradient(135deg, rgba(245, 158, 11, 0.1), rgba(251, 191, 36, 0.1));
        }
        
        .mode-icon {
            font-size: 48px;
            margin-bottom: 16px;
            color: #f59e0b;
        }
        
        .mode-title {
            font-size: 18px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }
        
        .mode-desc {
            font-size: 14px;
            color: #6b7280;
        }
        
        /* Input field styles */
        .practice-input {
            width: 100%;
            max-width: 400px;
            padding: 16px 20px;
            border: 2px solid #e5e7eb;
            border-radius: 15px;
            font-size: 18px;
            text-align: center;
            background: rgba(255, 255, 255, 0.9);
            margin: 20px auto;
            transition: all 0.3s ease;
            display: block;
        }
        
        .practice-input:focus {
            outline: none;
            border-color: #f59e0b;
            box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
        }
        
        .practice-input.correct {
            border-color: #10b981;
            background-color: #d1fae5;
        }
        
        .practice-input.incorrect {
            border-color: #ef4444;
            background-color: #fee2e2;
        }
        
        .input-feedback {
            margin-top: 16px;
            font-size: 16px;
            font-weight: 600;
            padding: 12px 24px;
            border-radius: 10px;
            display: none;
        }
        
        .input-feedback.correct {
            color: #065f46;
            background-color: #d1fae5;
            border: 1px solid #10b981;
            display: block;
        }
        
        .input-feedback.incorrect {
            color: #991b1b;
            background-color: #fee2e2;
            border: 1px solid #ef4444;
            display: block;
        }
        
        .input-feedback.info {
            color: #1e40af;
            background-color: #dbeafe;
            border: 1px solid #3b82f6;
            display: block;
        }
        
        /* Direction selector */
        .direction-selector {
            display: flex;
            justify-content: center;
            gap: 12px;
            margin-bottom: 24px;
        }
        
        .direction-btn {
            padding: 12px 24px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            background: white;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .direction-btn.active {
            border-color: #f59e0b;
            background: #fef3c7;
            color: #92400e;
        }
        
        .direction-btn:hover {
            border-color: #f59e0b;
        }
        
        /* Results */
        .practice-results {
            text-align: center;
            padding: 40px;
        }
        
        .results-score {
            font-size: 72px;
            font-weight: 700;
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 24px;
        }
        
        .results-message {
            font-size: 24px;
            color: #374151;
            margin-bottom: 32px;
        }
        
        .results-actions {
            display: flex;
            justify-content: center;
            gap: 20px;
        }
        
        @media (max-width: 768px) {
            .practice-word {
                font-size: 42px;
            }
            
            .practice-meaning {
                font-size: 18px;
            }
            
            .practice-controls {
                flex-direction: column;
                align-items: center;
            }
            
            .practice-stats {
                grid-template-columns: 1fr;
            }
            
            .mode-selector {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-orange-50 via-yellow-50 to-red-50 min-h-screen">
    <div class="flex h-screen">
        <%- include('../partials/student_sidebar', { user: user }) %>
        
        <div class="flex-1 flex flex-col overflow-hidden">
            <%- include('../partials/dashboards_header', { user: user }) %>

            <main class="flex-1 overflow-x-hidden overflow-y-auto">
                <div class="practice-container">
                    <!-- Practice Header -->
                    <div class="practice-header slide-in">
                        <div class="floating-animation">
                            <i class="fas fa-dumbbell text-6xl mb-4"></i>
                        </div>
                        <h1 class="text-4xl font-bold mb-2">Luyện tập từ vựng</h1>
                        <p class="text-xl text-orange-100">Chủ đề: <%= vocabulary.theme %></p>
                        <div class="mt-4 flex justify-center items-center gap-4">
                            <span class="bg-white bg-opacity-20 px-4 py-2 rounded-full">
                                <i class="fas fa-layer-group mr-2"></i>
                                <%= vocabulary.level === 'basic' ? 'Cơ bản' :
                                   vocabulary.level === 'intermediate' ? 'Trung cấp' :
                                   'Nâng cao' %>
                            </span>
                            <span class="bg-white bg-opacity-20 px-4 py-2 rounded-full">
                                <i class="fas fa-list mr-2"></i>
                                <%= vocabulary.words.length %> từ vựng
                            </span>
                        </div>
                    </div>

                    <!-- Mode Selection -->
                    <div id="modeSelection" class="slide-in">
                        <h2 class="text-2xl font-bold text-center mb-6 gradient-text">Chọn chế độ luyện tập</h2>
                        <div class="mode-selector">
                            <div class="mode-card" onclick="startPractice('flashcard')">
                                <div class="mode-icon">
                                    <i class="fas fa-clone"></i>
                                </div>
                                <div class="mode-title">Flashcard</div>
                                <div class="mode-desc">Xem từ → Nhập nghĩa → Enter để kiểm tra</div>
                            </div>
                            
                            <div class="mode-card" onclick="startPractice('listening')">
                                <div class="mode-icon">
                                    <i class="fas fa-headphones"></i>
                                </div>
                                <div class="mode-title">Luyện nghe</div>
                                <div class="mode-desc">Nghe phát âm → Nhập nghĩa → Enter để kiểm tra</div>
                            </div>
                            
                          
                            
                            <div class="mode-card" onclick="startPractice('typing-korean')">
                                <div class="mode-icon">
                                    <i class="fas fa-language"></i>
                                </div>
                                <div class="mode-title">Gõ tiếng Hàn</div>
                                <div class="mode-desc">Xem tiếng Việt → Gõ từ tiếng Hàn</div>
                            </div>
                        </div>
                    </div>

                    <!-- Practice Game -->
                    <div id="practiceGame" class="slide-in" style="display: none;">
                        <!-- Stats -->
                        <div class="practice-stats">
                            <div class="stat-box">
                                <div class="stat-value" id="currentWordNum">1</div>
                                <div class="stat-label">Từ hiện tại</div>
                            </div>
                            <div class="stat-box">
                                <div class="stat-value" id="totalWords"><%= vocabulary.words.length %></div>
                                <div class="stat-label">Tổng từ</div>
                            </div>
                            <div class="stat-box">
                                <div class="stat-value" id="practiceScore">0</div>
                                <div class="stat-label">Điểm</div>
                            </div>
                        </div>

                        <!-- Practice Card -->
                        <div class="practice-card">
                            <div class="practice-progress" id="practiceProgress">1/<%= vocabulary.words.length %></div>
                            
                            <div id="practiceContent">
                                <!-- Content will be dynamically inserted here -->
                            </div>
                            
                            <div class="practice-controls" id="practiceControls">
                                <!-- Controls will be dynamically inserted here -->
                            </div>
                        </div>
                    </div>

                    <!-- Results -->
                    <div id="practiceResults" class="slide-in" style="display: none;">
                        <div class="practice-results">
                            <div class="results-score" id="finalScore">100%</div>
                            <div class="results-message" id="resultsMessage">Xuất sắc! Bạn đã hoàn thành bài luyện tập!</div>
                            
                            <div class="results-actions">
                                <button class="practice-btn btn-next" onclick="restartPractice()">
                                    <i class="fas fa-redo"></i>
                                    Luyện tập lại
                                </button>
                                <button class="practice-btn btn-finish" onclick="goBack()">
                                    <i class="fas fa-arrow-left"></i>
                                    Quay lại
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <%- include('../partials/student_footer') %>
    
    <script>
        // Practice variables
        let practiceMode = '';
        let currentWordIndex = 0;
        let practiceScore = 0;
        let isRevealed = false;
        let vocabularyWords = <%- JSON.stringify(vocabulary.words) %>;
        let shuffledWords = [];
        
        // Voice synthesis
        let voices = [];
        let selectedVoice = null;
        let speechSynthesis = window.speechSynthesis;

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            loadVoices();
            shuffleWords();
        });

        // Utility function to normalize text for comparison
        function normalizeText(text) {
            return text.toLowerCase()
                       .replace(/\s+/g, ' ')  // Replace multiple spaces with single space
                       .trim()
                       .replace(/[.,!?;:]/g, '') // Remove punctuation
                       .replace(/[àáạảãâầấậẩẫăằắặẳẵ]/g, 'a')
                       .replace(/[èéẹẻẽêềếệểễ]/g, 'e')
                       .replace(/[ìíịỉĩ]/g, 'i')
                       .replace(/[òóọỏõôồốộổỗơờớợởỡ]/g, 'o')
                       .replace(/[ùúụủũưừứựửữ]/g, 'u')
                       .replace(/[ỳýỵỷỹ]/g, 'y')
                       .replace(/[đ]/g, 'd');
        }

        function loadVoices() {
            voices = speechSynthesis.getVoices().filter(voice => {
                return voice.lang.includes('ko') || voice.name.toLowerCase().includes('korean');
            });
            
            if (voices.length > 0) {
                selectedVoice = voices[0];
            }
            
            if (speechSynthesis.onvoiceschanged !== undefined) {
                speechSynthesis.onvoiceschanged = loadVoices;
            }
        }

        function shuffleWords() {
            shuffledWords = [...vocabularyWords].sort(() => 0.5 - Math.random());
        }

        function startPractice(mode) {
            practiceMode = mode;
            currentWordIndex = 0;
            practiceScore = 0;
            isRevealed = false;
            
            // Hide mode selection, show practice game
            document.getElementById('modeSelection').style.display = 'none';
            document.getElementById('practiceGame').style.display = 'block';
            
            loadPracticeWord();
        }

        function loadPracticeWord() {
            const word = shuffledWords[currentWordIndex];
            updateStats();
            
            const content = document.getElementById('practiceContent');
            const controls = document.getElementById('practiceControls');
            
            // Reset any existing input states
            const existingInputs = content.querySelectorAll('input');
            existingInputs.forEach(input => {
                input.classList.remove('correct', 'incorrect');
                input.value = '';
                input.disabled = false; // Re-enable input
                input.style.animation = ''; // Clear animations
            });
            
            const existingFeedback = content.querySelectorAll('.input-feedback');
            existingFeedback.forEach(feedback => {
                feedback.className = 'input-feedback';
                feedback.style.display = 'none';
                feedback.textContent = '';
            });
            
            switch (practiceMode) {
                case 'flashcard':
                    loadFlashcard(word, content, controls);
                    break;
                case 'listening':
                    loadListening(word, content, controls);
                    break;
                case 'typing-vietnamese':
                    loadTypingVietnamese(word, content, controls);
                    break;
                case 'typing-korean':
                    loadTypingKorean(word, content, controls);
                    break;
            }
        }

        function loadFlashcard(word, content, controls) {
            isRevealed = false;
            content.innerHTML = `
                <div class="practice-word">${word.korean}</div>
                <div class="practice-meaning" id="meaningText" style="opacity: 0;">${word.meaning}</div>
                <div style="color: #6b7280; margin-top: 16px;">
                    <i class="fas fa-volume-up"></i> ${word.pronunciation}
                </div>
                <input type="text" 
                       id="meaningInput" 
                       class="practice-input"
                       placeholder="Nhập nghĩa tiếng Việt rồi nhấn Enter để kiểm tra..." 
                       onkeydown="checkFlashcardAnswer(event)"
                       data-correct="${word.meaning}">
                <div id="flashcardFeedback" class="input-feedback"></div>
            `;
            
            controls.innerHTML = `
                <button class="practice-btn btn-audio" onclick="playAudio('${word.korean}')">
                    <i class="fas fa-volume-up"></i>
                    Nghe phát âm
                </button>
                <button class="practice-btn btn-reveal" onclick="revealMeaning()">
                    <i class="fas fa-eye"></i>
                    Hiện nghĩa
                </button>
                <button class="practice-btn btn-next" onclick="nextWord()" style="display: none;" id="nextWordBtn">
                    <i class="fas fa-arrow-right"></i>
                    Từ tiếp theo
                </button>
            `;
            
            // Focus on input
            setTimeout(() => document.getElementById('meaningInput')?.focus(), 100);
        }

        function loadListening(word, content, controls) {
            content.innerHTML = `
                <div style="font-size: 48px; color: #6b7280; margin-bottom: 24px;">
                    <i class="fas fa-headphones"></i>
                </div>
                <div style="font-size: 24px; color: #374151; margin-bottom: 32px;">
                    Nghe và nhập nghĩa của từ này
                </div>
                <div class="practice-meaning" id="meaningText" style="opacity: 0;">${word.meaning}</div>
                <input type="text" 
                       id="listeningInput" 
                       class="practice-input"
                       placeholder="Nhập nghĩa tiếng Việt rồi nhấn Enter để kiểm tra..." 
                       onkeydown="checkListeningAnswer(event)"
                       data-correct="${word.meaning}">
                <div id="listeningFeedback" class="input-feedback"></div>
            `;
            
            controls.innerHTML = `
                <button class="practice-btn btn-audio" onclick="playAudio('${word.korean}')">
                    <i class="fas fa-volume-up"></i>
                    Nghe lại
                </button>
                <button class="practice-btn btn-reveal" onclick="showListeningWord('${word.korean}')">
                    <i class="fas fa-eye"></i>
                    Xem từ
                </button>
                <button class="practice-btn btn-next" onclick="nextWord()" style="display: none;" id="nextWordBtn">
                    <i class="fas fa-arrow-right"></i>
                    Từ tiếp theo
                </button>
            `;
            
            // Auto play audio
            setTimeout(() => playAudio(word.korean), 500);
            // Focus on input after audio
            setTimeout(() => document.getElementById('listeningInput')?.focus(), 1500);
        }

        function loadTypingVietnamese(word, content, controls) {
            content.innerHTML = `
                <div class="practice-word">${word.korean}</div>
                <div style="color: #6b7280; margin: 16px 0;">
                    <i class="fas fa-volume-up"></i> ${word.pronunciation}
                </div>
                <div style="font-size: 18px; color: #374151; margin-bottom: 24px;">
                    Nhập nghĩa tiếng Việt:
                </div>
                <input type="text" 
                       id="typingVietnameseInput" 
                       class="practice-input"
                       placeholder="Nhập nghĩa tiếng Việt rồi nhấn Enter..."
                       onkeydown="checkTypingVietnamese(event)"
                       data-correct="${word.meaning}">
                <div id="typingVietnameseFeedback" class="input-feedback"></div>
            `;
            
            controls.innerHTML = `
                <button class="practice-btn btn-audio" onclick="playAudio('${word.korean}')">
                    <i class="fas fa-volume-up"></i>
                    Nghe phát âm
                </button>
                <button class="practice-btn btn-reveal" onclick="showTypingVietnameseAnswer('${word.meaning}')">
                    <i class="fas fa-lightbulb"></i>
                    Hiện đáp án
                </button>
                <button class="practice-btn btn-next" onclick="nextWord()" style="display: none;" id="nextWordBtn">
                    <i class="fas fa-arrow-right"></i>
                    Từ tiếp theo
                </button>
            `;
            
            // Focus on input
            setTimeout(() => document.getElementById('typingVietnameseInput')?.focus(), 100);
        }

        function loadTypingKorean(word, content, controls) {
            content.innerHTML = `
                <div class="practice-word" style="color: #059669;">${word.meaning}</div>
                <div style="font-size: 18px; color: #374151; margin: 24px 0;">
                    Nhập từ tiếng Hàn:
                </div>
                <input type="text" 
                       id="typingKoreanInput" 
                       class="practice-input"
                       placeholder="Nhập từ tiếng Hàn rồi nhấn Enter..."
                       onkeydown="checkTypingKorean(event)"
                       data-correct="${word.korean}">
                <div id="typingKoreanFeedback" class="input-feedback"></div>
            `;
            
            controls.innerHTML = `
                <button class="practice-btn btn-audio" onclick="playAudio('${word.korean}')">
                    <i class="fas fa-volume-up"></i>
                    Nghe phát âm
                </button>
                <button class="practice-btn btn-reveal" onclick="showTypingKoreanAnswer('${word.korean}')">
                    <i class="fas fa-lightbulb"></i>
                    Hiện đáp án
                </button>
                <button class="practice-btn btn-next" onclick="nextWord()" style="display: none;" id="nextWordBtn">
                    <i class="fas fa-arrow-right"></i>
                    Từ tiếp theo
                </button>
            `;
            
            // Focus on input
            setTimeout(() => document.getElementById('typingKoreanInput')?.focus(), 100);
        }

        function revealMeaning() {
            const meaningElement = document.getElementById('meaningText');
            meaningElement.style.opacity = '1';
            meaningElement.classList.add('show');
            document.getElementById('nextWordBtn').style.display = 'inline-flex';
            isRevealed = true;
        }

        function showWord(korean) {
            const content = document.getElementById('practiceContent');
            content.innerHTML += `<div class="practice-word" style="margin-top: 24px; color: #3b82f6;">${korean}</div>`;
            document.getElementById('nextWordBtn').style.display = 'inline-flex';
        }

        function showListeningWord(korean) {
            const content = document.getElementById('practiceContent');
            const existingWord = content.querySelector('.practice-word');
            if (!existingWord) {
                content.innerHTML += `<div class="practice-word" style="margin-top: 24px; color: #3b82f6;">${korean}</div>`;
            }
            document.getElementById('nextWordBtn').style.display = 'inline-flex';
        }

        // New function for flashcard answer checking
        function checkFlashcardAnswer(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn form submit
                const input = event.target;
                const userAnswer = input.value.trim();
                const correctAnswer = input.getAttribute('data-correct');
                const feedback = document.getElementById('flashcardFeedback');
                
                // Disable input để tránh nhập lại
                input.disabled = true;
                
                // Use the enhanced normalization function
                const normalizedUser = normalizeText(userAnswer);
                const normalizedCorrect = normalizeText(correctAnswer);
                
                if (normalizedUser === normalizedCorrect) {
                    // Câu trả lời đúng
                    input.classList.add('correct');
                    feedback.className = 'input-feedback correct';
                    feedback.textContent = '✓ Chính xác! Tuyệt vời!';
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng thành công
                    input.style.animation = 'pulse 0.6s ease-in-out';
                    
                    practiceScore += 10;
                    updateStats();
                    revealMeaning(); // Hiện nghĩa khi đúng
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    
                    // Phát âm từ khi đúng
                    setTimeout(() => playAudio(shuffledWords[currentWordIndex].korean), 500);
                } else {
                    // Câu trả lời sai
                    input.classList.add('incorrect');
                    feedback.className = 'input-feedback incorrect';
                    feedback.textContent = `✗ Sai rồi! Đáp án đúng là: ${correctAnswer}`;
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng rung khi sai
                    input.style.animation = 'shake 0.6s ease-in-out';
                    
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    revealMeaning();
                }
                
                // Focus vào nút Next để tiếp tục nhanh
                setTimeout(() => {
                    const nextBtn = document.getElementById('nextWordBtn');
                    if (nextBtn) nextBtn.focus();
                }, 1000);
            }
        }

        // New function for listening answer checking
        function checkListeningAnswer(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn form submit
                const input = event.target;
                const userAnswer = input.value.trim();
                const correctAnswer = input.getAttribute('data-correct');
                const feedback = document.getElementById('listeningFeedback');
                
                // Disable input để tránh nhập lại
                input.disabled = true;
                
                // Use the enhanced normalization function
                const normalizedUser = normalizeText(userAnswer);
                const normalizedCorrect = normalizeText(correctAnswer);
                
                if (normalizedUser === normalizedCorrect) {
                    // Câu trả lời đúng
                    input.classList.add('correct');
                    feedback.className = 'input-feedback correct';
                    feedback.textContent = '✓ Chính xác! Bạn nghe rất tốt!';
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng thành công
                    input.style.animation = 'pulse 0.6s ease-in-out';
                    
                    practiceScore += 10;
                    updateStats();
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    
                    // Hiện từ tiếng Hàn khi đúng
                    showListeningWord(shuffledWords[currentWordIndex].korean);
                    
                    // Phát âm lại để khẳng định
                    setTimeout(() => playAudio(shuffledWords[currentWordIndex].korean), 500);
                } else {
                    // Câu trả lời sai
                    input.classList.add('incorrect');
                    feedback.className = 'input-feedback incorrect';
                    feedback.textContent = `✗ Sai rồi! Đáp án đúng là: ${correctAnswer}`;
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng rung khi sai
                    input.style.animation = 'shake 0.6s ease-in-out';
                    
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    // Also show the Korean word
                    showListeningWord(shuffledWords[currentWordIndex].korean);
                }
                
                // Focus vào nút Next để tiếp tục nhanh
                setTimeout(() => {
                    const nextBtn = document.getElementById('nextWordBtn');
                    if (nextBtn) nextBtn.focus();
                }, 1000);
            }
        }

        // New function for typing Vietnamese answer checking
        function checkTypingVietnamese(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn form submit
                const input = event.target;
                const userAnswer = input.value.trim();
                const correctAnswer = input.getAttribute('data-correct');
                const feedback = document.getElementById('typingVietnameseFeedback');
                
                // Disable input để tránh nhập lại
                input.disabled = true;
                
                // Use the enhanced normalization function
                const normalizedUser = normalizeText(userAnswer);
                const normalizedCorrect = normalizeText(correctAnswer);
                
                if (normalizedUser === normalizedCorrect) {
                    // Câu trả lời đúng
                    input.classList.add('correct');
                    feedback.className = 'input-feedback correct';
                    feedback.textContent = '✓ Chính xác! Bạn gõ rất tốt!';
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng thành công
                    input.style.animation = 'pulse 0.6s ease-in-out';
                    
                    practiceScore += 10;
                    updateStats();
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    
                    // Phát âm từ tiếng Hàn khi đúng
                    setTimeout(() => playAudio(shuffledWords[currentWordIndex].korean), 500);
                } else {
                    // Câu trả lời sai
                    input.classList.add('incorrect');
                    feedback.className = 'input-feedback incorrect';
                    feedback.textContent = `✗ Sai rồi! Đáp án đúng là: ${correctAnswer}`;
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng rung khi sai
                    input.style.animation = 'shake 0.6s ease-in-out';
                    
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                }
                
                // Focus vào nút Next để tiếp tục nhanh
                setTimeout(() => {
                    const nextBtn = document.getElementById('nextWordBtn');
                    if (nextBtn) nextBtn.focus();
                }, 1000);
            }
        }

        // New function for typing Korean answer checking
        function checkTypingKorean(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn form submit
                const input = event.target;
                const userAnswer = input.value.trim();
                const correctAnswer = input.getAttribute('data-correct');
                const feedback = document.getElementById('typingKoreanFeedback');
                
                // Disable input để tránh nhập lại
                input.disabled = true;
                
                if (userAnswer === correctAnswer) {
                    // Câu trả lời đúng
                    input.classList.add('correct');
                    feedback.className = 'input-feedback correct';
                    feedback.textContent = '✓ Chính xác! Bạn gõ tiếng Hàn rất tốt!';
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng thành công
                    input.style.animation = 'pulse 0.6s ease-in-out';
                    
                    practiceScore += 10;
                    updateStats();
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    
                    // Play audio for correct answer
                    setTimeout(() => playAudio(correctAnswer), 500);
                } else {
                    // Câu trả lời sai
                    input.classList.add('incorrect');
                    feedback.className = 'input-feedback incorrect';
                    feedback.textContent = `✗ Sai rồi! Đáp án đúng là: ${correctAnswer}`;
                    feedback.style.display = 'block';
                    
                    // Hiệu ứng rung khi sai
                    input.style.animation = 'shake 0.6s ease-in-out';
                    
                    document.getElementById('nextWordBtn').style.display = 'inline-flex';
                    
                    // Play audio for correct answer
                    setTimeout(() => playAudio(correctAnswer), 500);
                }
                
                // Focus vào nút Next để tiếp tục nhanh
                setTimeout(() => {
                    const nextBtn = document.getElementById('nextWordBtn');
                    if (nextBtn) nextBtn.focus();
                }, 1000);
            }
        }

        // Functions to show answers for typing modes
        function showTypingVietnameseAnswer(answer) {
            const feedback = document.getElementById('typingVietnameseFeedback');
            feedback.className = 'input-feedback info';
            feedback.textContent = `💡 Gợi ý: ${answer}`;
            feedback.style.display = 'block';
        }

        function showTypingKoreanAnswer(answer) {
            const feedback = document.getElementById('typingKoreanFeedback');
            feedback.className = 'input-feedback info';
            feedback.textContent = `💡 Gợi ý: ${answer}`;
            feedback.style.display = 'block';
            // Play audio for hint
            playAudio(answer);
        }

        function nextWord() {
            currentWordIndex++;
            
            if (currentWordIndex >= shuffledWords.length) {
                showResults();
            } else {
                loadPracticeWord();
            }
        }

        function updateStats() {
            document.getElementById('currentWordNum').textContent = currentWordIndex + 1;
            document.getElementById('practiceScore').textContent = practiceScore;
            document.getElementById('practiceProgress').textContent = `${currentWordIndex + 1}/${shuffledWords.length}`;
        }

        function showResults() {
            const totalPossible = shuffledWords.length * 10;
            const percentage = Math.round((practiceScore / totalPossible) * 100);
            
            let message = '';
            if (percentage >= 90) {
                message = '🎉 Xuất sắc! Bạn thật tuyệt vời!';
            } else if (percentage >= 80) {
                message = '👍 Rất tốt! Bạn đã làm khá ổn!';
            } else if (percentage >= 70) {
                message = '👌 Khá ổn! Hãy luyện tập thêm nhé!';
            } else {
                message = '💪 Đừng bỏ cuộc! Hãy thử lại lần nữa!';
            }
            
            document.getElementById('finalScore').textContent = percentage + '%';
            document.getElementById('resultsMessage').textContent = message;
            
            // Hide practice game, show results
            document.getElementById('practiceGame').style.display = 'none';
            document.getElementById('practiceResults').style.display = 'block';
        }

        function playAudio(word) {
            if (!speechSynthesis) return;
            
            speechSynthesis.cancel();
            
            const utterance = new SpeechSynthesisUtterance(word);
            utterance.lang = 'ko-KR';
            utterance.rate = 0.8;
            utterance.pitch = 1;
            utterance.volume = 1;
            
            if (selectedVoice) {
                utterance.voice = selectedVoice;
            }
            
            speechSynthesis.speak(utterance);
        }

        function restartPractice() {
            shuffleWords();
            document.getElementById('practiceResults').style.display = 'none';
            document.getElementById('modeSelection').style.display = 'block';
            practiceScore = 0;
            currentWordIndex = 0;
        }

        function goBack() {
            window.history.back();
        }

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                goBack();
            } else if (e.key === ' ' && e.target.tagName !== 'INPUT') {
                // Chỉ phát âm khi không đang nhập
                e.preventDefault();
                const audioBtn = document.querySelector('.btn-audio');
                if (audioBtn) audioBtn.click();
            } else if (e.key === 'Enter' && e.target.tagName !== 'INPUT') {
                // Chỉ nhấn Next khi không đang nhập trong input
                e.preventDefault();
                const nextBtn = document.getElementById('nextWordBtn');
                if (nextBtn && nextBtn.style.display !== 'none') {
                    nextBtn.click();
                }
            }
        });
    </script>
</body>
</html>
