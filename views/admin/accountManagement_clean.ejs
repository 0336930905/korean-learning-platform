<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản Lý Tài Khoản - Korea-DB Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Custom styles for enhanced UI */
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .glass-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .hover-scale {
            transition: transform 0.2s ease;
        }
        
        .hover-scale:hover {
            transform: scale(1.02);
        }
        
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .loading-spinner {
            border: 2px solid #f3f3f3;
            border-top: 2px solid #3498db;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .status-indicator {
            position: relative;
            display: inline-block;
        }
        
        .status-indicator::after {
            content: '';
            position: absolute;
            top: -2px;
            right: -2px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            border: 2px solid white;
        }
        
        .status-active::after {
            background-color: #10b981;
            animation: pulse 2s infinite;
        }
        
        .status-inactive::after {
            background-color: #ef4444;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.2); opacity: 0.7; }
            100% { transform: scale(1); opacity: 1; }
        }
        
        .tooltip {
            position: relative;
        }
        
        .tooltip:hover::after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: #1f2937;
            color: white;
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 12px;
            white-space: nowrap;
            z-index: 1000;
        }
        
        .table-row-hover {
            transition: all 0.2s ease;
        }
        
        .table-row-hover:hover {
            background: linear-gradient(90deg, rgba(59, 130, 246, 0.05), rgba(59, 130, 246, 0.1));
            transform: translateX(4px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        .role-badge {
            position: relative;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }
        
        .role-badge::before {
            content: '';
            width: 8px;
            height: 8px;
            border-radius: 50%;
        }
        
        .role-admin::before { background: #8b5cf6; }
        .role-teacher::before { background: #10b981; }
        .role-student::before { background: #f59e0b; }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="flex h-screen">
        <%- include('../partials/admin_sidebar', { user: user }) %>
        
        <div class="flex-1 flex flex-col overflow-hidden">
            <%- include('../partials/dashboards_header', { user: user }) %>

            <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-50">
                <!-- Enhanced Page Header -->
                <div class="gradient-bg py-8 px-8 text-white">
                    <div class="max-w-7xl mx-auto">
                        <div class="flex items-center justify-between">
                            <div>
                                <h1 class="text-3xl font-bold">Quản Lý Tài Khoản</h1>
                                <p class="text-blue-100 mt-2">Quản lý thông tin và trạng thái tài khoản người dùng</p>
                            </div>
                            <div class="flex space-x-4">
                                <button onclick="window.location.href='/account-management/add'"
                                        class="bg-white text-blue-600 px-6 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors flex items-center space-x-2">
                                    <i class="fas fa-user-plus"></i>
                                    <span>Thêm Tài Khoản</span>
                                </button>
                                <button onclick="exportUsers()"
                                        class="bg-blue-500 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-600 transition-colors flex items-center space-x-2">
                                    <i class="fas fa-download"></i>
                                    <span>Xuất Excel</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="max-w-7xl mx-auto px-8 py-8">
                    <!-- Search and Filter Section -->
                    <div class="glass-card rounded-xl p-6 mb-8">
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                            <!-- Search Input -->
                            <div class="search-container">
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    <i class="fas fa-search mr-2"></i>Tìm kiếm
                                </label>
                                <input type="text" id="searchInput" 
                                       placeholder="Tìm theo email hoặc tên..."
                                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <!-- Role Filter -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    <i class="fas fa-user-tag mr-2"></i>Vai trò
                                </label>
                                <select id="roleFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="">Tất cả vai trò</option>
                                    <option value="admin">Quản trị viên</option>
                                    <option value="teacher">Giáo viên</option>
                                    <option value="student">Học sinh</option>
                                </select>
                            </div>
                            
                            <!-- Status Filter -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    <i class="fas fa-toggle-on mr-2"></i>Trạng thái
                                </label>
                                <select id="statusFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="">Tất cả trạng thái</option>
                                    <option value="active">Hoạt động</option>
                                    <option value="inactive">Vô hiệu</option>
                                </select>
                            </div>
                            
                            <!-- Reset Button -->
                            <div class="flex items-end">
                                <button onclick="resetFilters()" 
                                        class="w-full bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors">
                                    <i class="fas fa-refresh mr-2"></i>Đặt lại
                                </button>
                            </div>
                        </div>
                        
                        <!-- Result Count -->
                        <div class="mt-4 pt-4 border-t border-gray-200">
                            <p id="resultCount" class="text-sm text-gray-600">
                                Hiển thị <%= users.length %> tài khoản
                            </p>
                        </div>
                    </div>

                    <!-- Users Table -->
                    <div class="glass-card rounded-xl overflow-hidden">
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Người dùng
                                        </th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Vai trò
                                        </th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Trạng thái
                                        </th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Ngày tạo
                                        </th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Thao tác
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="userTableBody" class="bg-white divide-y divide-gray-200">
                                    <% users.forEach(user => { %>
                                    <tr class="table-row-hover" data-user-id="<%= user._id %>" data-user-email="<%= user.email %>" data-user-name="<%= user.fullName %>">
                                        <!-- User Info -->
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="flex-shrink-0 h-10 w-10 status-indicator <%= user.isActive ? 'status-active' : 'status-inactive' %>">
                                                    <img class="h-10 w-10 rounded-full object-cover" 
                                                         src="<%= user.profileImage || '/images/default-avatar.png' %>" 
                                                         alt="<%= user.fullName %>">
                                                </div>
                                                <div class="ml-4">
                                                    <div class="text-sm font-medium text-gray-900 user-name">
                                                        <%= user.fullName %>
                                                    </div>
                                                    <div class="text-sm text-gray-500 user-email">
                                                        <%= user.email %>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        
                                        <!-- Role -->
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span class="role-badge role-<%= user.role %> px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-<%= user.role === 'admin' ? 'purple' : user.role === 'teacher' ? 'green' : 'yellow' %>-100 text-<%= user.role === 'admin' ? 'purple' : user.role === 'teacher' ? 'green' : 'yellow' %>-800">
                                                <% if (user.role === 'admin') { %>
                                                    <i class="fas fa-user-shield mr-1"></i>Quản trị viên
                                                <% } else if (user.role === 'teacher') { %>
                                                    <i class="fas fa-chalkboard-teacher mr-1"></i>Giáo viên
                                                <% } else { %>
                                                    <i class="fas fa-user-graduate mr-1"></i>Học sinh
                                                <% } %>
                                            </span>
                                        </td>
                                        
                                        <!-- Status -->
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span class="status-badge px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full <%= user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                                <i class="fas <%= user.isActive ? 'fa-check-circle' : 'fa-times-circle' %> mr-1"></i>
                                                <%= user.isActive ? 'Hoạt động' : 'Vô hiệu' %>
                                            </span>
                                        </td>
                                        
                                        <!-- Created Date -->
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <%= new Date(user.createdAt).toLocaleDateString('vi-VN') %>
                                        </td>
                                        
                                        <!-- Actions -->
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                            <div class="flex items-center space-x-2">
                                                <!-- Toggle Status Button -->
                                                <button onclick="toggleUserStatus('<%= user._id %>')" 
                                                        class="action-button px-3 py-2 rounded-lg transition-colors <%= user.isActive ? 'bg-red-100 hover:bg-red-200' : 'bg-green-100 hover:bg-green-200' %>"
                                                        data-tooltip="<%= user.isActive ? 'Khóa tài khoản' : 'Mở khóa tài khoản' %>">
                                                    <i class="fas <%= user.isActive ? 'fa-lock text-red-600' : 'fa-unlock text-green-600' %>"></i>
                                                </button>
                                                
                                                <!-- Reset Password Button -->
                                                <button onclick="resetPassword('<%= user._id %>')"
                                                        class="action-button px-3 py-2 bg-blue-100 hover:bg-blue-200 rounded-lg transition-colors"
                                                        data-tooltip="Đặt lại mật khẩu">
                                                    <i class="fas fa-key text-blue-600"></i>
                                                </button>
                                                
                                                <!-- Edit Button -->
                                                <button onclick="window.location.href='/account-management/edit/<%= user._id %>'"
                                                        class="action-button px-3 py-2 bg-yellow-100 hover:bg-yellow-200 rounded-lg transition-colors"
                                                        data-tooltip="Chỉnh sửa">
                                                    <i class="fas fa-edit text-yellow-600"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Toast Notification Container -->
    <div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

    <!-- Block User Modal -->
    <div id="blockUserModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Xác nhận khóa tài khoản</h3>
            </div>
            
            <div class="px-6 py-4">
                <p class="text-gray-600 mb-4">Vui lòng nhập lý do khóa tài khoản:</p>
                <textarea id="blockReason" 
                          placeholder="Nhập lý do khóa tài khoản..."
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                          rows="3"></textarea>
            </div>
            
            <div class="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end space-x-3">
                <button onclick="closeBlockModal()" 
                        class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors">
                    Hủy
                </button>
                <button onclick="confirmBlockUser()" 
                        class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors">
                    Xác nhận khóa
                </button>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-lg p-8 flex items-center space-x-4">
            <div class="loading-spinner"></div>
            <span class="text-gray-700">Đang xử lý...</span>
        </div>
    </div>

    <!-- JavaScript -->
    <script>
        // ACCOUNT LOCK FUNCTIONALITY
        window.ACCOUNT_LOCK = {
            modal: null,
            reasonInput: null,
            currentUserId: null,

            init() {
                this.modal = document.getElementById('blockUserModal');
                this.reasonInput = document.getElementById('blockReason');
                console.log('✅ Account lock system initialized');
                return true;
            },

            show(userId) {
                this.currentUserId = userId;
                this.reasonInput.value = '';
                this.modal.classList.remove('hidden');
                this.reasonInput.focus();
                console.log('🔒 Showing block modal for user:', userId);
            },

            hide() {
                this.modal.classList.add('hidden');
                this.currentUserId = null;
                console.log('❌ Block modal hidden');
            },

            async confirmBlock() {
                const reason = this.reasonInput.value.trim();
                
                if (!reason) {
                    this.showToast('Vui lòng nhập lý do khóa tài khoản', 'warning');
                    return;
                }

                if (!this.currentUserId) {
                    this.showToast('Không tìm thấy ID người dùng', 'error');
                    return;
                }

                console.log('🔄 Sending block request...', { userId: this.currentUserId, reason });

                try {
                    const response = await fetch(`/account-management/toggle-status/${this.currentUserId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ blockReason: reason })
                    });

                    const data = await response.json();
                    console.log('📨 Server response:', data);

                    if (response.ok && data.success) {
                        this.showToast(data.message, 'success');
                        this.hide();
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        this.showToast(data.message || 'Có lỗi xảy ra', 'error');
                    }
                } catch (error) {
                    console.error('❌ Network error:', error);
                    this.showToast('Lỗi kết nối. Vui lòng thử lại.', 'error');
                }
            },

            showToast(message, type = 'info') {
                const toastContainer = document.getElementById('toastContainer');
                const toastId = 'toast-' + Date.now();
                
                const bgColors = {
                    success: 'bg-green-500',
                    error: 'bg-red-500', 
                    warning: 'bg-yellow-500',
                    info: 'bg-blue-500'
                };
                
                const toast = document.createElement('div');
                toast.id = toastId;
                toast.className = `${bgColors[type]} text-white px-6 py-3 rounded-lg shadow-lg mb-2 toast-enter max-w-sm`;
                toast.innerHTML = `
                    <div class="flex items-center justify-between">
                        <span class="flex-1">${message}</span>
                        <button onclick="document.getElementById('${toastId}').remove()" class="text-white hover:text-gray-200 ml-4">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                
                toastContainer.appendChild(toast);
                
                // Auto remove after 5 seconds
                setTimeout(() => {
                    toast.classList.remove('toast-enter');
                    toast.classList.add('toast-exit');
                    setTimeout(() => toast.remove(), 300);
                }, 5000);
            }
        };

        // Global functions required by HTML onclick handlers
        function toggleUserStatus(userId) {
            console.log('🎯 toggleUserStatus called with:', userId);
            ACCOUNT_LOCK.show(userId);
        }

        function closeBlockModal() {
            ACCOUNT_LOCK.hide();
        }

        function confirmBlockUser() {
            ACCOUNT_LOCK.confirmBlock();
        }

        function resetPassword(userId) {
            console.log('🔑 Reset password for user:', userId);
            ACCOUNT_LOCK.showToast('Chức năng đặt lại mật khẩu đang được phát triển', 'info');
        }

        function exportUsers() {
            console.log('📄 Export users function called');
            ACCOUNT_LOCK.showToast('Chức năng xuất Excel đang được phát triển', 'info');
        }

        function setupAccountManagement() {
            // Initialize account lock system
            ACCOUNT_LOCK.init();

            // Setup basic search functionality
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                let searchTimeout;
                searchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(() => {
                        applyFilters();
                    }, 300);
                });
            }

            // Setup filter functionality  
            const roleFilter = document.getElementById('roleFilter');
            const statusFilter = document.getElementById('statusFilter');
            
            if (roleFilter) {
                roleFilter.addEventListener('change', applyFilters);
            }
            
            if (statusFilter) {
                statusFilter.addEventListener('change', applyFilters);
            }
            
            console.log('✅ Account management setup complete');
        }

        function applyFilters() {
            const roleFilter = document.getElementById('roleFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;
            const searchQuery = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('#userTableBody tr');
            
            rows.forEach(row => {
                let visible = true;
                
                // Search filter
                if (searchQuery) {
                    const text = row.textContent.toLowerCase();
                    if (!text.includes(searchQuery)) {
                        visible = false;
                    }
                }
                
                // Role filter
                if (roleFilter) {
                    const roleCell = row.querySelector('.role-badge');
                    if (roleCell) {
                        const roleText = roleCell.textContent.toLowerCase();
                        if (!roleText.includes(roleFilter.toLowerCase())) {
                            visible = false;
                        }
                    }
                }
                
                // Status filter
                if (statusFilter) {
                    const statusCell = row.querySelector('.status-badge');
                    if (statusCell) {
                        const isActive = statusCell.textContent.includes('Hoạt động');
                        if ((statusFilter === 'active' && !isActive) || (statusFilter === 'inactive' && isActive)) {
                            visible = false;
                        }
                    }
                }
                
                row.style.display = visible ? '' : 'none';
            });
            
            updateResultCount();
        }

        function resetFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('roleFilter').value = '';
            document.getElementById('statusFilter').value = '';
            
            const rows = document.querySelectorAll('#userTableBody tr');
            rows.forEach(row => {
                row.style.display = '';
            });
            
            updateResultCount();
            ACCOUNT_LOCK.showToast('Đã đặt lại bộ lọc', 'info');
        }

        function updateResultCount() {
            const visibleRows = document.querySelectorAll('#userTableBody tr:not([style*="display: none"])');
            const resultCount = document.getElementById('resultCount');
            if (resultCount) {
                resultCount.textContent = `Hiển thị ${visibleRows.length} tài khoản`;
            }
        }

        // Initialize when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            setupAccountManagement();
        });
    </script>
</body>
</html>
