<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ƒêi·ªÉm Ki·ªÉm Tra | Gi·∫£ng vi√™n</title>
    <link rel="stylesheet" href="/style/style.css">
    <link rel="stylesheet" href="/style/teacher.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .card-hover {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }
        
        .floating-animation {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        .slide-in {
            animation: slideIn 0.6s ease-out forwards;
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .btn-3d {
            position: relative;
            transform-style: preserve-3d;
            transition: all 0.3s ease;
        }
        
        .btn-3d:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }
        
        .test-card {
            position: relative;
            overflow: hidden;
            border-left: 4px solid transparent;
            transition: all 0.3s ease;
        }
        
        .test-card:hover {
            border-left-color: #667eea;
        }
        
        .test-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.6s;
        }
        
        .test-card:hover::before {
            left: 100%;
        }
        
        .score-badge {
            position: relative;
            display: inline-flex;
            align-items: center;
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.875rem;
        }
        
        .score-excellent {
            background: linear-gradient(135deg, #10b981, #34d399);
            color: white;
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
        }
        
        .score-good {
            background: linear-gradient(135deg, #3b82f6, #60a5fa);
            color: white;
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
        }
        
        .score-average {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
            color: white;
            box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
        }
        
        .score-poor {
            background: linear-gradient(135deg, #ef4444, #f87171);
            color: white;
            box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);
        }
        
        .modal-overlay {
            backdrop-filter: blur(8px);
            animation: fadeIn 0.3s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .modal-content {
            animation: modalSlideIn 0.3s ease;
        }
        
        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: scale(0.9) translateY(-50px);
            }
            to {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }
        
        .action-button {
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        .action-button::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transition: all 0.4s ease;
            transform: translate(-50%, -50%);
        }
        
        .action-button:hover::before {
            width: 200%;
            height: 200%;
        }
        
        .class-selector {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(102, 126, 234, 0.2);
            transition: all 0.3s ease;
        }
        
        .class-selector:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: scale(1.02);
        }
        
        .student-row {
            transition: all 0.3s ease;
        }
        
        .student-row:hover {
            background: linear-gradient(90deg, rgba(102, 126, 234, 0.05), transparent);
        }
        
        .score-input {
            transition: all 0.3s ease;
        }
        
        .score-input:focus {
            transform: scale(1.05);
            box-shadow: 0 0 15px rgba(102, 126, 234, 0.3);
        }
        
        .stat-card {
            position: relative;
            overflow: hidden;
        }
        
        .stat-card::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 50px;
            height: 50px;
            background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.3));
            border-radius: 50%;
            transform: translate(20px, -20px);
            transition: all 0.3s ease;
        }
        
        .stat-card:hover::after {
            transform: translate(10px, -10px);
            width: 60px;
            height: 60px;
        }
        
        .chart-container {
            position: relative;
            height: 200px;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            border-radius: 15px;
            padding: 20px;
        }
        
        .progress-bar {
            height: 8px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 4px;
            transition: width 1s ease-in-out;
        }
        
        .pulse-animation {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 min-h-screen">
    <div class="flex h-screen">
        <%- include('../partials/teacher_sidebar') %>

        <div class="flex-1 flex flex-col overflow-hidden">
            <%- include('../partials/dashboards_header') %>

            <main class="flex-1 overflow-x-hidden overflow-y-auto p-6">
                <!-- Hero Section -->
                <div class="mb-8">
                    <div class="gradient-bg rounded-3xl p-8 text-white relative overflow-hidden slide-in">
                        <div class="absolute top-0 right-0 w-32 h-32 bg-white opacity-10 rounded-full transform translate-x-8 -translate-y-8 floating-animation"></div>
                        <div class="absolute bottom-0 left-0 w-24 h-24 bg-white opacity-10 rounded-full transform -translate-x-4 translate-y-4 floating-animation" style="animation-delay: 1s;"></div>
                        
                        <div class="relative z-10">
                            <div class="flex justify-between items-center">
                                <div>
                                    <h1 class="text-4xl font-bold mb-4">Qu·∫£n l√Ω ƒëi·ªÉm ki·ªÉm tra</h1>
                                    <p class="text-xl opacity-90 mb-6">Theo d√µi v√† ƒë√°nh gi√° k·∫øt qu·∫£ h·ªçc t·∫≠p c·ªßa h·ªçc vi√™n</p>
                                    
                                    <!-- Class Selector -->
                                    <div class="mt-6">
                                        <label class="block text-lg font-semibold mb-3">
                                            <i class="fas fa-chalkboard-teacher mr-2"></i>
                                            Ch·ªçn l·ªõp h·ªçc:
                                        </label>
                                        <select id="classSelector" 
                                                class="class-selector px-6 py-4 rounded-2xl text-gray-800 font-semibold text-lg focus:outline-none w-96"
                                                onchange="handleClassChange(this.value)">
                                            <option value="">üéØ -- Ch·ªçn l·ªõp h·ªçc --</option>
                                            <% classes.forEach(function(class_) { %>
                                                <option value="<%= class_._id %>" 
                                                        <%= selectedClassId === class_._id.toString() ? 'selected' : '' %>>
                                                    üìö <%= class_.course.title %> - <%= class_.name %>
                                                </option>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div>
                                
                                <!-- Action Button -->
                                <div class="text-center">
                                    <button onclick="openAddTestModal()" 
                                            class="btn-3d bg-white bg-opacity-20 hover:bg-opacity-30 text-white px-8 py-4 rounded-2xl font-semibold text-lg shadow-2xl backdrop-blur-sm border border-white border-opacity-30 transition-all duration-300"
                                            id="addTestBtn" 
                                            <%= !selectedClassId ? 'disabled' : '' %>>
                                        <i class="fas fa-plus mr-3"></i>
                                        Th√™m b√†i ki·ªÉm tra
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Statistics Section -->
                <% if (selectedClassId && tests && tests.length > 0) { %>
                    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                        <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.1s;">
                            <div class="flex items-center justify-between mb-4">
                                <div class="p-3 rounded-full bg-blue-100 text-blue-600 floating-animation">
                                    <i class="fas fa-clipboard-list text-2xl"></i>
                                </div>
                                <div class="text-right">
                                    <p class="text-3xl font-bold text-blue-600"><%= tests.length %></p>
                                    <p class="text-sm text-gray-500">B√†i ki·ªÉm tra</p>
                                </div>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="progress-bar" style="width: 100%"></div>
                            </div>
                        </div>

                        <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.2s;">
                            <div class="flex items-center justify-between mb-4">
                                <div class="p-3 rounded-full bg-green-100 text-green-600 floating-animation" style="animation-delay: 0.5s;">
                                    <i class="fas fa-users text-2xl"></i>
                                </div>
                                <div class="text-right">
                                    <% 
                                    let totalStudents = 0;
                                    if (tests.length > 0 && tests[0].scores) {
                                        totalStudents = tests[0].scores.length;
                                    }
                                    %>
                                    <p class="text-3xl font-bold text-green-600"><%= totalStudents %></p>
                                    <p class="text-sm text-gray-500">H·ªçc vi√™n</p>
                                </div>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-green-500 h-2 rounded-full" style="width: 100%"></div>
                            </div>
                        </div>

                        <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.3s;">
                            <div class="flex items-center justify-between mb-4">
                                <div class="p-3 rounded-full bg-yellow-100 text-yellow-600 floating-animation" style="animation-delay: 1s;">
                                    <i class="fas fa-chart-line text-2xl"></i>
                                </div>
                                <div class="text-right">
                                    <% 
                                    let averageScore = 0;
                                    let totalScores = 0;
                                    let scoreCount = 0;
                                    tests.forEach(test => {
                                        if (test.scores) {
                                            test.scores.forEach(score => {
                                                totalScores += score.score;
                                                scoreCount++;
                                            });
                                        }
                                    });
                                    averageScore = scoreCount > 0 ? (totalScores / scoreCount).toFixed(1) : 0;
                                    %>
                                    <p class="text-3xl font-bold text-yellow-600"><%= averageScore %></p>
                                    <p class="text-sm text-gray-500">ƒêi·ªÉm TB</p>
                                </div>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-yellow-500 h-2 rounded-full" style="width: <%= averageScore * 10 %>%"></div>
                            </div>
                        </div>

                        <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.4s;">
                            <div class="flex items-center justify-between mb-4">
                                <div class="p-3 rounded-full bg-purple-100 text-purple-600 floating-animation pulse-animation" style="animation-delay: 1.5s;">
                                    <i class="fas fa-trophy text-2xl"></i>
                                </div>
                                <div class="text-right">
                                    <% 
                                    let excellentCount = 0;
                                    tests.forEach(test => {
                                        if (test.scores) {
                                            excellentCount += test.scores.filter(score => score.score >= 8).length;
                                        }
                                    });
                                    %>
                                    <p class="text-3xl font-bold text-purple-600"><%= excellentCount %></p>
                                    <p class="text-sm text-gray-500">ƒêi·ªÉm cao</p>
                                </div>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-purple-500 h-2 rounded-full" style="width: <%= scoreCount > 0 ? (excellentCount / scoreCount) * 100 : 0 %>%"></div>
                            </div>
                        </div>
                    </div>
                <% } %>

                <!-- Tests List -->
                <div class="glass-card rounded-3xl shadow-2xl overflow-hidden slide-in">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-2xl font-bold gradient-text">
                            <i class="fas fa-clipboard-list mr-3"></i>
                            Danh s√°ch b√†i ki·ªÉm tra
                        </h2>
                        <p class="text-gray-600 mt-2">Qu·∫£n l√Ω v√† theo d√µi ƒëi·ªÉm s·ªë c·ªßa t·ª´ng b√†i ki·ªÉm tra</p>
                    </div>

                    <% if (tests && tests.length > 0) { %>
                        <div class="divide-y divide-gray-100">
                            <% tests.forEach((test, index) => { %>
                                <div class="test-card p-8 slide-in" style="animation-delay: <%= index * 0.1 %>s;">
                                    <!-- Test Header -->
                                    <div class="flex justify-between items-center mb-6">
                                        <div class="flex-1">
                                            <div class="flex items-center mb-2">
                                                <div class="w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4 floating-animation">
                                                    <i class="fas fa-clipboard-check"></i>
                                                </div>
                                                <div>
                                                    <h3 class="text-2xl font-bold text-gray-800"><%= test.testName %></h3>
                                                    <p class="text-gray-600 flex items-center">
                                                        <i class="fas fa-calendar-alt mr-2 text-blue-500"></i>
                                                        Ng√†y ki·ªÉm tra: <%= new Date(test.testDate).toLocaleDateString('vi-VN', {
                                                            year: 'numeric',
                                                            month: 'long',
                                                            day: 'numeric'
                                                        }) %>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Action Buttons -->
                                        <div class="flex space-x-3">
                                            <button type="button"
                                                    onclick="openEditModal('<%= test._id.toString() %>')" 
                                                    class="action-button btn-3d bg-gradient-to-r from-yellow-500 to-yellow-600 text-white px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-all duration-300">
                                                <i class="fas fa-edit mr-2"></i>S·ª≠a
                                            </button>
                                            <button onclick="confirmDelete('<%= test._id %>')"
                                                    class="action-button btn-3d bg-gradient-to-r from-red-500 to-red-600 text-white px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-all duration-300">
                                                <i class="fas fa-trash-alt mr-2"></i>X√≥a
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Test Statistics -->
                                    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                                        <div class="bg-blue-50 rounded-xl p-4 text-center">
                                            <i class="fas fa-users text-blue-500 text-2xl mb-2"></i>
                                            <p class="text-2xl font-bold text-blue-600"><%= test.scores.length %></p>
                                            <p class="text-sm text-gray-600">H·ªçc vi√™n tham gia</p>
                                        </div>
                                        
                                        <div class="bg-green-50 rounded-xl p-4 text-center">
                                            <i class="fas fa-chart-line text-green-500 text-2xl mb-2"></i>
                                            <p class="text-2xl font-bold text-green-600">
                                                <%= test.scores.length > 0 ? (test.scores.reduce((sum, s) => sum + s.score, 0) / test.scores.length).toFixed(1) : 0 %>
                                            </p>
                                            <p class="text-sm text-gray-600">ƒêi·ªÉm trung b√¨nh</p>
                                        </div>
                                        
                                        <div class="bg-yellow-50 rounded-xl p-4 text-center">
                                            <i class="fas fa-star text-yellow-500 text-2xl mb-2"></i>
                                            <p class="text-2xl font-bold text-yellow-600">
                                                <%= test.scores.length > 0 ? Math.max(...test.scores.map(s => s.score)) : 0 %>
                                            </p>
                                            <p class="text-sm text-gray-600">ƒêi·ªÉm cao nh·∫•t</p>
                                        </div>
                                        
                                        <div class="bg-purple-50 rounded-xl p-4 text-center">
                                            <i class="fas fa-trophy text-purple-500 text-2xl mb-2"></i>
                                            <p class="text-2xl font-bold text-purple-600">
                                                <%= test.scores.filter(s => s.score >= 8).length %>
                                            </p>
                                            <p class="text-sm text-gray-600">ƒêi·ªÉm xu·∫•t s·∫Øc</p>
                                        </div>
                                    </div>

                                    <!-- Scores Table -->
                                    <div class="overflow-x-auto">
                                        <table class="min-w-full">
                                            <thead class="bg-gradient-to-r from-gray-50 to-gray-100">
                                                <tr>
                                                    <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                                        <i class="fas fa-user mr-2"></i>H·ªçc vi√™n
                                                    </th>
                                                    <th class="px-6 py-4 text-center text-xs font-bold text-gray-600 uppercase tracking-wider">
                                                        <i class="fas fa-star mr-2"></i>ƒêi·ªÉm s·ªë
                                                    </th>
                                                    <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                                        <i class="fas fa-comment mr-2"></i>Ghi ch√∫
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody class="bg-white divide-y divide-gray-100">
                                                <% test.scores.forEach((score, scoreIndex) => { %>
                                                    <tr class="student-row slide-in" style="animation-delay: <%= (index * 0.1) + (scoreIndex * 0.05) %>s;">
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            <div class="flex items-center">
                                                                <div class="w-10 h-10 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full flex items-center justify-center text-white font-bold mr-4">
                                                                    <%= score.student.fullName.charAt(0).toUpperCase() %>
                                                                </div>
                                                                <div>
                                                                    <div class="text-lg font-semibold text-gray-900">
                                                                        <%= score.student.fullName %>
                                                                    </div>
                                                                    <div class="text-sm text-gray-500">
                                                                        ID: <%= score.student._id.toString().slice(-6) %>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-center">
                                                            <span class="score-badge <%= 
                                                                score.score >= 8 ? 'score-excellent' :
                                                                score.score >= 6 ? 'score-good' :
                                                                score.score >= 4 ? 'score-average' : 'score-poor'
                                                            %>">
                                                                <% if (score.score >= 8) { %>
                                                                    <i class="fas fa-trophy mr-1"></i>
                                                                <% } else if (score.score >= 6) { %>
                                                                    <i class="fas fa-thumbs-up mr-1"></i>
                                                                <% } else if (score.score >= 4) { %>
                                                                    <i class="fas fa-minus mr-1"></i>
                                                                <% } else { %>
                                                                    <i class="fas fa-thumbs-down mr-1"></i>
                                                                <% } %>
                                                                <%= score.score %>/10
                                                            </span>
                                                        </td>
                                                        <td class="px-6 py-4 text-gray-600">
                                                            <% if (score.notes) { %>
                                                                <div class="bg-gray-50 rounded-lg p-3">
                                                                    <i class="fas fa-quote-left text-gray-400 mr-2"></i>
                                                                    <%= score.notes %>
                                                                </div>
                                                            <% } else { %>
                                                                <span class="text-gray-400 italic">Kh√¥ng c√≥ ghi ch√∫</span>
                                                            <% } %>
                                                        </td>
                                                    </tr>
                                                <% }); %>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <!-- Empty State -->
                        <div class="text-center py-16">
                            <div class="floating-animation mb-8">
                                <i class="fas fa-clipboard-list text-8xl text-gray-300"></i>
                            </div>
                            <h3 class="text-3xl font-bold text-gray-600 mb-4">
                                <%= selectedClassId ? 'Ch∆∞a c√≥ b√†i ki·ªÉm tra' : 'Ch∆∞a ch·ªçn l·ªõp h·ªçc' %>
                            </h3>
                            <p class="text-gray-400 mb-8 text-lg">
                                <%= selectedClassId ? 'H√£y t·∫°o b√†i ki·ªÉm tra ƒë·∫ßu ti√™n cho l·ªõp h·ªçc n√†y' : 'Vui l√≤ng ch·ªçn m·ªôt l·ªõp h·ªçc ƒë·ªÉ xem b√†i ki·ªÉm tra' %>
                            </p>
                            <% if (selectedClassId) { %>
                                <button onclick="openAddTestModal()"
                                        class="btn-3d bg-gradient-to-r from-blue-500 to-purple-500 text-white px-10 py-4 rounded-2xl font-semibold text-lg shadow-2xl hover:shadow-3xl transition-all duration-300">
                                    <i class="fas fa-plus mr-3"></i>
                                    T·∫°o b√†i ki·ªÉm tra ƒë·∫ßu ti√™n
                                </button>
                            <% } %>
                        </div>
                    <% } %>
                </div>
            </main>
        </div>
    </div>

    <!-- Enhanced Add Test Modal -->
    <div id="addTestModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 modal-overlay">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content glass-card rounded-3xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto">
                <div class="p-8">
                    <div class="flex justify-between items-center mb-8">
                        <h3 class="text-3xl font-bold gradient-text">
                            <i class="fas fa-plus-circle mr-3"></i>
                            Th√™m b√†i ki·ªÉm tra m·ªõi
                        </h3>
                        <button onclick="closeAddTestModal()" 
                                class="text-gray-400 hover:text-gray-600 text-2xl">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    
                    <form id="addTestForm" onsubmit="handleSubmit(event)">
                        <!-- Test Info -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                            <div>
                                <label class="block text-lg font-semibold text-gray-800 mb-3">
                                    <i class="fas fa-heading text-blue-500 mr-2"></i>
                                    T√™n b√†i ki·ªÉm tra
                                </label>
                                <input type="text" 
                                       name="testName" 
                                       required
                                       placeholder="VD: Ki·ªÉm tra gi·ªØa k·ª≥"
                                       class="w-full p-4 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none bg-white text-lg">
                            </div>
                            <div>
                                <label class="block text-lg font-semibold text-gray-800 mb-3">
                                    <i class="fas fa-calendar-alt text-green-500 mr-2"></i>
                                    Ng√†y ki·ªÉm tra
                                </label>
                                <input type="date" 
                                       name="testDate" 
                                       required
                                       class="w-full p-4 rounded-xl border-2 border-gray-200 focus:border-green-500 focus:outline-none bg-white text-lg">
                            </div>
                        </div>

                        <!-- Student Scores -->
                        <div class="mb-8">
                            <h4 class="text-xl font-bold text-gray-800 mb-4">
                                <i class="fas fa-users text-purple-500 mr-2"></i>
                                ƒêi·ªÉm s·ªë h·ªçc vi√™n
                            </h4>
                            <div id="studentScores" class="overflow-y-auto max-h-96 border border-gray-200 rounded-xl">
                                <!-- Student scores will be loaded here -->
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="flex justify-end space-x-4">
                            <button type="button" 
                                    onclick="closeAddTestModal()"
                                    class="btn-3d bg-gray-500 text-white px-8 py-3 rounded-xl font-semibold hover:bg-gray-600 transition-all duration-300">
                                <i class="fas fa-times mr-2"></i>H·ªßy
                            </button>
                            <button type="submit"
                                    class="btn-3d bg-gradient-to-r from-blue-500 to-purple-500 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                                <i class="fas fa-save mr-2"></i>L∆∞u b√†i ki·ªÉm tra
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Edit Test Modal -->
    <div id="editTestModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 modal-overlay">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content glass-card rounded-3xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto">
                <div class="p-8">
                    <div class="flex justify-between items-center mb-8">
                        <h3 class="text-3xl font-bold gradient-text">
                            <i class="fas fa-edit mr-3"></i>
                            Ch·ªânh s·ª≠a b√†i ki·ªÉm tra
                        </h3>
                        <button onclick="closeEditModal()" 
                                class="text-gray-400 hover:text-gray-600 text-2xl">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    
                    <form id="editTestForm" onsubmit="handleEdit(event)">
                        <input type="hidden" id="editTestId">
                        
                        <!-- Test Info -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                            <div>
                                <label class="block text-lg font-semibold text-gray-800 mb-3">
                                    <i class="fas fa-heading text-blue-500 mr-2"></i>
                                    T√™n b√†i ki·ªÉm tra
                                </label>
                                <input type="text" 
                                       name="testName" 
                                       required
                                       class="w-full p-4 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none bg-white text-lg">
                            </div>
                            <div>
                                <label class="block text-lg font-semibold text-gray-800 mb-3">
                                    <i class="fas fa-calendar-alt text-green-500 mr-2"></i>
                                    Ng√†y ki·ªÉm tra
                                </label>
                                <input type="date" 
                                       name="testDate" 
                                       required
                                       class="w-full p-4 rounded-xl border-2 border-gray-200 focus:border-green-500 focus:outline-none bg-white text-lg">
                            </div>
                        </div>

                        <!-- Student Scores -->
                        <div class="mb-8">
                            <h4 class="text-xl font-bold text-gray-800 mb-4">
                                <i class="fas fa-users text-purple-500 mr-2"></i>
                                C·∫≠p nh·∫≠t ƒëi·ªÉm s·ªë
                            </h4>
                            <div id="editStudentScores" class="overflow-y-auto max-h-96 border border-gray-200 rounded-xl">
                                <!-- Student scores will be loaded here -->
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="flex justify-end space-x-4">
                            <button type="button" 
                                    onclick="closeEditModal()"
                                    class="btn-3d bg-gray-500 text-white px-8 py-3 rounded-xl font-semibold hover:bg-gray-600 transition-all duration-300">
                                <i class="fas fa-times mr-2"></i>H·ªßy
                            </button>
                            <button type="submit"
                                    class="btn-3d bg-gradient-to-r from-yellow-500 to-orange-500 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                                <i class="fas fa-save mr-2"></i>L∆∞u thay ƒë·ªïi
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        let selectedClass = '<%= selectedClassId %>';
        const addTestBtn = document.getElementById('addTestBtn');

        function handleClassChange(classId) {
            selectedClass = classId;
            addTestBtn.disabled = !classId;
            window.location.href = `/teacher/classTests?classId=${classId}`;
        }

        function openAddTestModal() {
            if (!selectedClass) return;
            
            document.getElementById('addTestModal').classList.remove('hidden');
            loadStudents();
        }

        function closeAddTestModal() {
            document.getElementById('addTestModal').classList.add('hidden');
        }

        async function loadStudents() {
            try {
                const response = await fetch(`/teacher/classTests/${selectedClass}`);
                const data = await response.json();
                
                if (data.success) {
                    const html = createStudentScoresHtml(data.test?.scores || [], data.students || []);
                    document.getElementById('studentScores').innerHTML = html;
                }
            } catch (error) {
                console.error('Error loading students:', error);
                showNotification('C√≥ l·ªói x·∫£y ra khi t·∫£i danh s√°ch h·ªçc vi√™n', 'error');
            }
        }

        function createStudentScoresHtml(scores, students) {
            return `
                <table class="w-full">
                    <thead class="bg-gradient-to-r from-gray-50 to-gray-100">
                        <tr>
                            <th class="px-6 py-4 text-left text-sm font-bold text-gray-600 uppercase">
                                <i class="fas fa-user mr-2"></i>H·ªçc vi√™n
                            </th>
                            <th class="px-6 py-4 text-center text-sm font-bold text-gray-600 uppercase w-32">
                                <i class="fas fa-star mr-2"></i>ƒêi·ªÉm
                            </th>
                            <th class="px-6 py-4 text-left text-sm font-bold text-gray-600 uppercase">
                                <i class="fas fa-comment mr-2"></i>Ghi ch√∫
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100">
                        ${students.map((student, index) => `
                            <tr class="student-row" style="animation-delay: ${index * 0.05}s;">
                                <td class="px-6 py-4">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full flex items-center justify-center text-white font-bold mr-3">
                                            ${student.fullName.charAt(0).toUpperCase()}
                                        </div>
                                        <div>
                                            <div class="font-semibold text-gray-800">${student.fullName}</div>
                                            <div class="text-sm text-gray-500">ID: ${student._id.slice(-6)}</div>
                                        </div>
                                    </div>
                                    <input type="hidden" name="studentIds[]" value="${student._id}">
                                </td>
                                <td class="px-6 py-4 text-center">
                                    <input type="number" 
                                           name="scores[]" 
                                           min="0" 
                                           max="10" 
                                           step="0.1" 
                                           required
                                           placeholder="0-10"
                                           class="score-input w-20 p-3 border-2 border-gray-200 rounded-xl text-center font-bold text-lg focus:border-purple-500 focus:outline-none">
                                </td>
                                <td class="px-6 py-4">
                                    <input type="text" 
                                           name="notes[]"
                                           placeholder="Ghi ch√∫ v·ªÅ b√†i l√†m..."
                                           class="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-green-500 focus:outline-none">
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
        }

        async function handleSubmit(event) {
            event.preventDefault();
            const form = event.target;
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>ƒêang l∆∞u...';
            submitBtn.disabled = true;

            const scores = Array.from(form.querySelectorAll('tbody tr')).map(row => ({
                studentId: row.querySelector('[name="studentIds[]"]').value,
                score: parseFloat(row.querySelector('[name="scores[]"]').value),
                notes: row.querySelector('[name="notes[]"]').value
            }));

            try {
                const response = await fetch('/teacher/classTests/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        classId: selectedClass,
                        testName: form.testName.value,
                        testDate: form.testDate.value,
                        scores
                    })
                });

                const data = await response.json();
                if (data.success) {
                    showNotification('ƒê√£ th√™m b√†i ki·ªÉm tra th√†nh c√¥ng!', 'success');
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error(data.message || 'C√≥ l·ªói x·∫£y ra');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification(error.message || 'C√≥ l·ªói x·∫£y ra khi l∆∞u b√†i ki·ªÉm tra', 'error');
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
            }
        }

        async function openEditModal(testId) {
            try {
                const response = await fetch(`/teacher/classTests/${testId}`);
                const data = await response.json();
                
                if (data.success) {
                    const test = data.test;
                    const form = document.getElementById('editTestForm');
                    
                    // Set form values
                    document.getElementById('editTestId').value = testId;
                    form.elements.testName.value = test.testName;
                    form.elements.testDate.value = new Date(test.testDate).toISOString().split('T')[0];
                    
                    // Create scores table HTML
                    const scoresHtml = `
                        <table class="w-full">
                            <thead class="bg-gradient-to-r from-gray-50 to-gray-100">
                                <tr>
                                    <th class="px-6 py-4 text-left text-sm font-bold text-gray-600 uppercase">
                                        <i class="fas fa-user mr-2"></i>H·ªçc vi√™n
                                    </th>
                                    <th class="px-6 py-4 text-center text-sm font-bold text-gray-600 uppercase w-32">
                                        <i class="fas fa-star mr-2"></i>ƒêi·ªÉm
                                    </th>
                                    <th class="px-6 py-4 text-left text-sm font-bold text-gray-600 uppercase">
                                        <i class="fas fa-comment mr-2"></i>Ghi ch√∫
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-100">
                                ${data.students.map((student, index) => {
                                    const score = test.scores.find(s => s.student._id === student._id) || {};
                                    return `
                                        <tr class="student-row" style="animation-delay: ${index * 0.05}s;">
                                            <td class="px-6 py-4">
                                                <div class="flex items-center">
                                                    <div class="w-10 h-10 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full flex items-center justify-center text-white font-bold mr-3">
                                                        ${student.fullName.charAt(0).toUpperCase()}
                                                    </div>
                                                    <div>
                                                        <div class="font-semibold text-gray-800">${student.fullName}</div>
                                                        <div class="text-sm text-gray-500">ID: ${student._id.slice(-6)}</div>
                                                    </div>
                                                </div>
                                                <input type="hidden" name="studentIds[]" value="${student._id}">
                                            </td>
                                            <td class="px-6 py-4 text-center">
                                                <input type="number" 
                                                       name="scores[]" 
                                                       min="0" 
                                                       max="10" 
                                                       step="0.1" 
                                                       required
                                                       value="${score.score || ''}"
                                                       placeholder="0-10"
                                                       class="score-input w-20 p-3 border-2 border-gray-200 rounded-xl text-center font-bold text-lg focus:border-purple-500 focus:outline-none">
                                            </td>
                                            <td class="px-6 py-4">
                                                <input type="text" 
                                                       name="notes[]"
                                                       value="${score.notes || ''}"
                                                       placeholder="Ghi ch√∫ v·ªÅ b√†i l√†m..."
                                                       class="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-green-500 focus:outline-none">
                                            </td>
                                        </tr>
                                    `;
                                }).join('')}
                            </tbody>
                        </table>
                    `;
                    
                    document.getElementById('editStudentScores').innerHTML = scoresHtml;
                    document.getElementById('editTestModal').classList.remove('hidden');
                } else {
                    throw new Error(data.message || 'C√≥ l·ªói x·∫£y ra');
                }
            } catch (error) {
                console.error('Error opening edit modal:', error);
                showNotification(error.message || 'C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin b√†i ki·ªÉm tra', 'error');
            }
        }

        function closeEditModal() {
            document.getElementById('editTestModal').classList.add('hidden');
        }

        async function handleEdit(event) {
            event.preventDefault();
            const form = event.target;
            const testId = document.getElementById('editTestId').value;
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>ƒêang c·∫≠p nh·∫≠t...';
            submitBtn.disabled = true;

            const scores = Array.from(form.querySelectorAll('tbody tr')).map(row => ({
                studentId: row.querySelector('[name="studentIds[]"]').value,
                score: parseFloat(row.querySelector('[name="scores[]"]').value),
                notes: row.querySelector('[name="notes[]"]').value
            }));

            try {
                const response = await fetch(`/teacher/classTests/${testId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        testName: form.testName.value,
                        testDate: form.testDate.value,
                        scores
                    })
                });

                const data = await response.json();
                if (data.success) {
                    showNotification('ƒê√£ c·∫≠p nh·∫≠t b√†i ki·ªÉm tra th√†nh c√¥ng!', 'success');
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error(data.message || 'C√≥ l·ªói x·∫£y ra');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification(error.message || 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t b√†i ki·ªÉm tra', 'error');
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
            }
        }

        function confirmDelete(testId) {
            if (confirm('‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i ki·ªÉm tra n√†y?\n\nH√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!')) {
                deleteTest(testId);
            }
        }

        async function deleteTest(testId) {
            try {
                const response = await fetch(`/teacher/classTests/${testId}`, {
                    method: 'DELETE'
                });

                const data = await response.json();
                if (data.success) {
                    showNotification('ƒê√£ x√≥a b√†i ki·ªÉm tra th√†nh c√¥ng!', 'success');
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error(data.message || 'C√≥ l·ªói x·∫£y ra');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification(error.message || 'C√≥ l·ªói x·∫£y ra khi x√≥a b√†i ki·ªÉm tra', 'error');
            }
        }

        // Enhanced notification system
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            const bgColor = type === 'success' ? 'from-green-500 to-green-600' : 'from-red-500 to-red-600';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
            
            notification.className = `fixed top-6 right-6 bg-gradient-to-r ${bgColor} text-white px-6 py-4 rounded-xl shadow-2xl transform translate-x-full transition-all duration-500 z-50`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="fas ${icon} text-xl mr-3"></i>
                    <span class="font-semibold">${message}</span>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => notification.remove(), 500);
            }, 3000);
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Close modals on outside click
            document.getElementById('addTestModal').addEventListener('click', function(e) {
                if (e.target === this) closeAddTestModal();
            });

            document.getElementById('editTestModal').addEventListener('click', function(e) {
                if (e.target === this) closeEditModal();
            });

            // Initialize animations
            const elements = document.querySelectorAll('.slide-in');
            elements.forEach((element, index) => {
                setTimeout(() => {
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>

    <%- include('../partials/teacher_footer') %>
</body>
</html>