<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Danh sách bài tập | Giảng viên</title>
    <link rel="stylesheet" href="/style/style.css">
    <link rel="stylesheet" href="/style/teacher.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .card-hover {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .card-hover:hover {
            transform: translateY(-8px) rotateX(5deg);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }
        
        .floating-animation {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-12px); }
        }
        
        .slide-in {
            animation: slideIn 0.6s ease-out forwards;
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .btn-3d {
            position: relative;
            transform-style: preserve-3d;
            transition: all 0.3s ease;
        }
        
        .btn-3d:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }
        
        .assignment-card {
            position: relative;
            overflow: hidden;
            transition: all 0.4s ease;
            border-left: 4px solid transparent;
        }
        
        .assignment-card:hover {
            border-left-color: #667eea;
        }
        
        .assignment-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.6s;
        }
        
        .assignment-card:hover::before {
            left: 100%;
        }
        
        .status-badge {
            position: relative;
            display: inline-flex;
            align-items: center;
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }
        
        .status-active {
            background: linear-gradient(135deg, #10b981, #34d399);
            color: white;
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
        }
        
        .status-expired {
            background: linear-gradient(135deg, #ef4444, #f87171);
            color: white;
            box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);
        }
        
        .status-pending {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
            color: white;
            box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
        }
        
        .pulse-animation {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
        
        .stat-card {
            position: relative;
            overflow: hidden;
        }
        
        .stat-card::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 50px;
            height: 50px;
            background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.3));
            border-radius: 50%;
            transform: translate(20px, -20px);
            transition: all 0.3s ease;
        }
        
        .stat-card:hover::after {
            transform: translate(10px, -10px);
            width: 60px;
            height: 60px;
        }
        
        .filter-section {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(248, 250, 252, 0.9));
            backdrop-filter: blur(20px);
            border: 2px solid rgba(102, 126, 234, 0.15);
            box-shadow: 0 8px 32px rgba(102, 126, 234, 0.1);
            position: relative;
            overflow: hidden;
        }
        
        .filter-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2, #667eea);
            background-size: 200% 100%;
            animation: shimmer 3s linear infinite;
        }
        
        @keyframes shimmer {
            0% { background-position: -200% 0; }
            100% { background-position: 200% 0; }
        }
        
        .filter-dropdown, .search-box input {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(248, 250, 252, 0.9));
            backdrop-filter: blur(15px);
            border: 2px solid rgba(102, 126, 234, 0.2);
            border-radius: 12px;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            font-size: 14px;
            color: #374151;
            min-height: 48px;
            box-shadow: 0 4px 16px rgba(102, 126, 234, 0.08);
        }
        
        .filter-dropdown:focus, .search-box input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15), 0 8px 24px rgba(102, 126, 234, 0.12);
            transform: translateY(-2px);
            outline: none;
            background: linear-gradient(135deg, rgba(255, 255, 255, 1), rgba(248, 250, 252, 0.95));
        }
        
        .filter-dropdown:hover, .search-box input:hover {
            border-color: rgba(102, 126, 234, 0.4);
            transform: translateY(-1px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.1);
        }
        
        .filter-grid {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 1.5rem;
            align-items: end;
        }
        
        @media (max-width: 1024px) {
            .filter-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }
        }
        
        @media (min-width: 1025px) and (max-width: 1280px) {
            .filter-grid {
                grid-template-columns: 1fr 1fr;
                gap: 1.25rem;
            }
        }
        
        .filter-label {
            display: block;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            font-size: 14px;
            letter-spacing: 0.025em;
        }
        
        .filter-group {
            position: relative;
        }
        
        .results-counter {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            border: 1px solid rgba(102, 126, 234, 0.2);
            border-radius: 12px;
            padding: 12px 20px;
            text-align: center;
            margin-top: 1.5rem;
        }
        
        .results-counter span {
            font-weight: 600;
            color: #667eea;
        }
        
        .modal-overlay {
            backdrop-filter: blur(8px);
            animation: fadeIn 0.3s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .modal-content {
            animation: modalSlideIn 0.3s ease;
        }
        
        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: scale(0.9) translateY(-50px);
            }
            to {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }
        
        .action-button {
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        .action-button::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transition: all 0.4s ease;
            transform: translate(-50%, -50%);
        }
        
        .action-button:hover::before {
            width: 200%;
            height: 200%;
        }
        
        .countdown-timer {
            font-family: 'Courier New', monospace;
            font-weight: bold;
            color: #667eea;
        }
        
        .assignment-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
        }
        
        .search-box {
            position: relative;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .search-box:focus-within {
            transform: scale(1.02);
        }
        
        .search-box::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transition: all 0.4s ease;
            transform: translateX(-50%);
        }
        
        .search-box:focus-within::after {
            width: 100%;
        }
        
        .search-box input {
            padding-left: 3rem;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(248, 250, 252, 0.9));
            backdrop-filter: blur(10px);
            border: 2px solid rgba(102, 126, 234, 0.1);
            border-radius: 15px;
            transition: all 0.3s ease;
        }
        
        .search-box input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
        }
        
        .filter-group {
            position: relative;
            animation: fadeInUp 0.6s ease forwards;
            opacity: 0;
            transform: translateY(20px);
        }
        
        .filter-group:nth-child(1) { animation-delay: 0.1s; }
        .filter-group:nth-child(2) { animation-delay: 0.2s; }
        .filter-group:nth-child(3) { animation-delay: 0.3s; }
        
        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .filter-label {
            display: flex;
            align-items: center;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            font-size: 14px;
            letter-spacing: 0.025em;
        }
        
        .filter-dropdown option {
            padding: 12px;
            background: white;
            color: #374151;
        }
        
        .results-counter {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            border: 1px solid rgba(102, 126, 234, 0.2);
            border-radius: 12px;
            padding: 16px 24px;
            text-align: center;
            margin-top: 1.5rem;
            position: relative;
            overflow: hidden;
        }
        
        .results-counter::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.6s;
        }
        
        .results-counter:hover::before {
            left: 100%;
        }
        
        .results-counter span {
            font-weight: 600;
            color: #667eea;
            position: relative;
            z-index: 1;
        }
        
        .progress-ring {
            position: relative;
            width: 80px;
            height: 80px;
        }
        
        .progress-ring svg {
            width: 100%;
            height: 100%;
            transform: rotate(-90deg);
        }
        
        .progress-ring circle {
            fill: none;
            stroke-width: 8;
            stroke-linecap: round;
        }
        
        .bg-ring {
            stroke: rgba(102, 126, 234, 0.1);
        }
        
        .progress-ring-fill {
            stroke: url(#gradient);
            stroke-dasharray: 251.2;
            stroke-dashoffset: 251.2;
            transition: stroke-dashoffset 1s ease-in-out;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 min-h-screen">
    <div class="flex h-screen">
        <%- include('../partials/teacher_sidebar') %>

        <div class="flex-1 flex flex-col overflow-hidden">
            <%- include('../partials/dashboards_header') %>

            <main class="flex-1 overflow-x-hidden overflow-y-auto p-6">
                <!-- Hero Section -->
                <div class="mb-8">
                    <div class="gradient-bg rounded-3xl p-8 text-white relative overflow-hidden slide-in">
                        <div class="absolute top-0 right-0 w-32 h-32 bg-white opacity-10 rounded-full transform translate-x-8 -translate-y-8 floating-animation"></div>
                        <div class="absolute bottom-0 left-0 w-24 h-24 bg-white opacity-10 rounded-full transform -translate-x-4 translate-y-4 floating-animation" style="animation-delay: 1s;"></div>
                        
                        <div class="relative z-10">
                            <div class="flex justify-between items-center">
                                <div>
                                    <h1 class="text-4xl font-bold mb-4">Quản lý bài tập</h1>
                                    <p class="text-xl opacity-90 mb-6">Theo dõi và quản lý tất cả bài tập của các lớp học</p>
                                    
                                    <!-- Quick Stats -->
                                    <div class="flex items-center space-x-6 text-lg">
                                        <div class="flex items-center">
                                            <i class="fas fa-tasks mr-2"></i>
                                            <span><%= assignments.length %> bài tập</span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-chalkboard-teacher mr-2"></i>
                                            <span><%= classes.length %> lớp học</span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-clock mr-2"></i>
                                            <span id="activeCount">0 đang hoạt động</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Action Button -->
                                <div class="text-center">
                                    <a href="/teacher/add_assignment" 
                                       class="btn-3d bg-white bg-opacity-20 hover:bg-opacity-30 text-white px-8 py-4 rounded-2xl font-semibold text-lg shadow-2xl backdrop-blur-sm border border-white border-opacity-30 transition-all duration-300">
                                        <i class="fas fa-plus mr-3"></i>
                                        Tạo bài tập mới
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Enhanced Stats Section -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.1s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-blue-100 text-blue-600 floating-animation">
                                <i class="fas fa-tasks text-2xl"></i>
                            </div>
                            <div class="progress-ring">
                                <svg>
                                    <defs>
                                        <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                            <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
                                            <stop offset="100%" style="stop-color:#764ba2;stop-opacity:1" />
                                        </linearGradient>
                                    </defs>
                                    <circle cx="40" cy="40" r="36" class="bg-ring"></circle>
                                    <circle cx="40" cy="40" r="36" class="progress-ring-fill" id="totalProgress"></circle>
                                </svg>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-xl font-bold text-gray-800"><%= assignments.length %></span>
                                </div>
                            </div>
                        </div>
                        <h3 class="text-lg font-semibold text-gray-700 mb-1">Tổng bài tập</h3>
                        <p class="text-sm text-gray-500">Trên tất cả lớp học</p>
                    </div>

                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.2s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-green-100 text-green-600 floating-animation" style="animation-delay: 0.5s;">
                                <i class="fas fa-check-circle text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-green-600" id="activeAssignments">0</p>
                                <p class="text-sm text-gray-500">Đang hoạt động</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-green-500 h-2 rounded-full transition-all duration-1000" id="activeProgress" style="width: 0%"></div>
                        </div>
                    </div>

                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.3s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-red-100 text-red-600 floating-animation pulse-animation" style="animation-delay: 1s;">
                                <i class="fas fa-exclamation-triangle text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-red-600" id="expiredAssignments">0</p>
                                <p class="text-sm text-gray-500">Đã hết hạn</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-red-500 h-2 rounded-full transition-all duration-1000" id="expiredProgress" style="width: 0%"></div>
                        </div>
                    </div>

                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.4s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-purple-100 text-purple-600 floating-animation" style="animation-delay: 1.5s;">
                                <i class="fas fa-graduation-cap text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-purple-600"><%= classes.length %></p>
                                <p class="text-sm text-gray-500">Lớp học</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-purple-500 h-2 rounded-full" style="width: 100%"></div>
                        </div>
                    </div>
                </div>

                <!-- Enhanced Filter Section -->
                <div class="filter-section rounded-2xl p-8 mb-8 slide-in">
                    <div class="flex flex-col gap-6">
                        <!-- Header -->
                        <div class="text-center">
                            <h2 class="text-3xl font-bold gradient-text mb-3">Danh sách bài tập</h2>
                            <p class="text-gray-600 text-lg">Quản lý và theo dõi tất cả bài tập của bạn</p>
                        </div>
                        
                        <!-- Filters Grid -->
                        <div class="filter-grid">
                            <!-- Search Box -->
                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="fas fa-search mr-2 text-purple-500"></i>
                                    Tìm kiếm bài tập
                                </label>
                                <div class="search-box relative">
                                    <input type="text" 
                                           id="searchInput"
                                           placeholder="Nhập tên hoặc mô tả bài tập..." 
                                           class="w-full pl-12 pr-4 py-3">
                                    <i class="fas fa-search absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                                </div>
                            </div>
                            
                            <!-- Class Filter -->
                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="fas fa-chalkboard-teacher mr-2 text-blue-500"></i>
                                    Lớp học
                                </label>
                                <select id="classFilter" class="filter-dropdown w-full px-4 py-3">
                                    <option value="all">🎯 Tất cả lớp học</option>
                                    <% classes.forEach(function(classItem) { %>
                                        <option value="<%= classItem._id %>">📚 <%= classItem.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            
                            <!-- Status Filter -->
                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="fas fa-chart-line mr-2 text-green-500"></i>
                                    Trạng thái
                                </label>
                                <select id="statusFilter" class="filter-dropdown w-full px-4 py-3">
                                    <option value="all">📊 Tất cả trạng thái</option>
                                    <option value="active">✅ Đang hoạt động</option>
                                    <option value="expired">⏰ Đã hết hạn</option>
                                    <option value="pending">🔄 Sắp đến hạn</option>
                                </select>
                            </div>
                        </div>
                        
                        <!-- Results Counter -->
                        <div class="results-counter">
                            <span class="text-gray-600">
                                Hiển thị: <span id="visibleCount" class="font-bold">0</span>/<span id="totalCount" class="font-bold"><%= assignments.length %></span> bài tập
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Enhanced Assignment Cards Grid -->
                <div class="assignment-grid" id="assignmentGrid">
                    <% if (assignments.length > 0) { %>
                        <% assignments.forEach(function(assignment, index) { 
                            const now = new Date();
                            const dueDate = new Date(assignment.dueDate);
                            const isExpired = now > dueDate;
                            const timeDiff = dueDate - now;
                            const daysLeft = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
                        %>
                            <div class="assignment-card glass-card rounded-2xl p-6 card-hover slide-in"
                                 data-class-id="<%= assignment.class._id %>"
                                 data-status="<%= isExpired ? 'expired' : (daysLeft <= 3 ? 'pending' : 'active') %>"
                                 style="animation-delay: <%= index * 0.1 %>s;">
                                
                                <!-- Card Header -->
                                <div class="flex justify-between items-start mb-6">
                                    <div class="flex-1">
                                        <h3 class="text-xl font-bold text-gray-800 mb-2 line-clamp-2">
                                            <%= assignment.title %>
                                        </h3>
                                        <p class="text-gray-600 text-sm flex items-center">
                                            <i class="fas fa-chalkboard-teacher mr-2 text-purple-500"></i>
                                            <%= assignment.class.name %>
                                        </p>
                                    </div>
                                    
                                    <!-- Status Badge -->
                                    <span class="status-badge <%= isExpired ? 'status-expired' : (daysLeft <= 3 ? 'status-pending' : 'status-active') %>">
                                        <% if (isExpired) { %>
                                            <i class="fas fa-times-circle mr-1"></i>Đã hết hạn
                                        <% } else if (daysLeft <= 3) { %>
                                            <i class="fas fa-exclamation-triangle mr-1"></i>Sắp hết hạn
                                        <% } else { %>
                                            <i class="fas fa-check-circle mr-1"></i>Hoạt động
                                        <% } %>
                                    </span>
                                </div>

                                <!-- Assignment Description -->
                                <div class="mb-6">
                                    <p class="text-gray-600 text-sm leading-relaxed line-clamp-3">
                                        <%= assignment.description %>
                                    </p>
                                </div>

                                <!-- Assignment Details -->
                                <div class="space-y-3 mb-6">
                                    <!-- Due Date -->
                                    <div class="flex items-center justify-between p-3 bg-blue-50 rounded-xl">
                                        <div class="flex items-center">
                                            <i class="fas fa-calendar-alt text-blue-500 mr-3"></i>
                                            <div>
                                                <p class="text-sm font-semibold text-gray-800">Hạn nộp</p>
                                                <p class="text-xs text-gray-500">
                                                    <%= new Date(assignment.dueDate).toLocaleDateString('vi-VN', {
                                                        year: 'numeric',
                                                        month: 'long',
                                                        day: 'numeric'
                                                    }) %>
                                                </p>
                                            </div>
                                        </div>
                                        <div class="text-right">
                                            <% if (!isExpired) { %>
                                                <p class="countdown-timer text-lg">
                                                    <%= daysLeft > 0 ? `${daysLeft} ngày` : 'Hôm nay' %>
                                                </p>
                                                <p class="text-xs text-gray-500">còn lại</p>
                                            <% } else { %>
                                                <p class="text-red-500 font-semibold">Đã quá hạn</p>
                                                <p class="text-xs text-red-400">
                                                    <%= Math.abs(daysLeft) %> ngày trước
                                                </p>
                                            <% } %>
                                        </div>
                                    </div>

                                    <!-- Submission Stats -->
                                    <div class="flex items-center justify-between p-3 bg-green-50 rounded-xl">
                                        <div class="flex items-center">
                                            <i class="fas fa-users text-green-500 mr-3"></i>
                                            <div>
                                                <p class="text-sm font-semibold text-gray-800">Bài nộp</p>
                                                <p class="text-xs text-gray-500">Tình trạng nộp bài</p>
                                            </div>
                                        </div>
                                        <div class="text-right">
                                            <p class="text-green-600 font-bold text-lg">
                                                <%= assignment.submissions ? assignment.submissions.length : 0 %>
                                            </p>
                                            <p class="text-xs text-gray-500">bài nộp</p>
                                        </div>
                                    </div>
                                </div>

                                <!-- Attachment File (if exists) -->
                                <% if (assignment.attachmentFile) { %>
                                <div class="mb-6">
                                    <div class="flex items-center justify-between p-3 bg-indigo-50 rounded-xl">
                                        <div class="flex items-center">
                                            <% 
                                            let fileIcon = 'fa-file';
                                            let fileColor = 'text-gray-500';
                                            if (assignment.attachmentFile.mimeType && assignment.attachmentFile.mimeType.includes('pdf')) {
                                                fileIcon = 'fa-file-pdf';
                                                fileColor = 'text-red-500';
                                            } else if (assignment.attachmentFile.mimeType && assignment.attachmentFile.mimeType.includes('audio')) {
                                                fileIcon = 'fa-file-audio';
                                                fileColor = 'text-purple-500';
                                            } else if (assignment.attachmentFile.mimeType && (assignment.attachmentFile.mimeType.includes('word') || assignment.attachmentFile.mimeType.includes('document'))) {
                                                fileIcon = 'fa-file-word';
                                                fileColor = 'text-blue-500';
                                            }
                                            %>
                                            <i class="fas <%= fileIcon %> <%= fileColor %> mr-3 text-xl"></i>
                                            <div>
                                                <p class="text-sm font-semibold text-gray-800">File đính kèm</p>
                                                <p class="text-xs text-gray-500">
                                                    <%= assignment.attachmentFile.originalName %>
                                                </p>
                                            </div>
                                        </div>
                                        <a href="/uploads/<%= assignment.attachmentFile.fileName %>" 
                                           target="_blank"
                                           class="text-indigo-600 hover:text-indigo-700 text-sm font-semibold">
                                            <i class="fas fa-download mr-1"></i>
                                            Tải xuống
                                        </a>
                                    </div>
                                </div>
                                <% } %>

                                <!-- Action Buttons -->
                                <div class="grid grid-cols-2 gap-3">
                                    <a href="/teacher/assignment-submissions/<%= assignment._id %>" 
                                       class="action-button btn-3d bg-gradient-to-r from-blue-500 to-blue-600 text-white px-4 py-3 rounded-xl font-semibold text-center hover:shadow-lg transition-all duration-300">
                                        <i class="fas fa-eye mr-2"></i>
                                        Xem bài nộp
                                    </a>
                                    
                                    <div class="flex space-x-2">
                                        <button onclick="editAssignment('<%= assignment._id %>')"
                                                class="action-button btn-3d bg-gradient-to-r from-yellow-500 to-yellow-600 text-white px-3 py-3 rounded-xl font-semibold hover:shadow-lg transition-all duration-300 flex-1">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        
                                        <button onclick="deleteAssignment('<%= assignment._id %>')"
                                                class="action-button btn-3d bg-gradient-to-r from-red-500 to-red-600 text-white px-3 py-3 rounded-xl font-semibold hover:shadow-lg transition-all duration-300 flex-1">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Assignment ID for reference -->
                                <div class="mt-4 pt-4 border-t border-gray-100">
                                    <p class="text-xs text-gray-400 text-center">
                                        ID: <%= assignment._id.toString().slice(-8) %>
                                    </p>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <!-- Empty State -->
                        <div class="col-span-full">
                            <div class="text-center py-16">
                                <div class="floating-animation mb-8">
                                    <i class="fas fa-tasks text-8xl text-gray-300"></i>
                                </div>
                                <h3 class="text-3xl font-bold text-gray-600 mb-4">Chưa có bài tập nào</h3>
                                <p class="text-gray-400 mb-8 text-lg">Hãy tạo bài tập đầu tiên cho học viên của bạn</p>
                                <a href="/teacher/add_assignment" 
                                   class="btn-3d bg-gradient-to-r from-blue-500 to-purple-500 text-white px-10 py-4 rounded-2xl font-semibold text-lg shadow-2xl hover:shadow-3xl transition-all duration-300">
                                    <i class="fas fa-plus mr-3"></i>
                                    Tạo bài tập đầu tiên
                                </a>
                            </div>
                        </div>
                    <% } %>
                </div>

                <!-- Load More Button (if needed) -->
                <% if (assignments.length > 12) { %>
                    <div class="text-center mt-12">
                        <button id="loadMoreBtn" class="btn-3d bg-gradient-to-r from-purple-500 to-pink-500 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                            <i class="fas fa-plus mr-2"></i>
                            Tải thêm bài tập
                        </button>
                    </div>
                <% } %>
            </main>
        </div>
    </div>

    <!-- Enhanced Delete Confirmation Modal -->
    <div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 hidden modal-overlay flex items-center justify-center z-50">
        <div class="modal-content glass-card rounded-3xl shadow-2xl max-w-md mx-4">
            <div class="p-8">
                <div class="text-center mb-6">
                    <div class="w-20 h-20 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-exclamation-triangle text-red-500 text-3xl"></i>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-800 mb-2">Xác nhận xóa bài tập</h3>
                    <p class="text-gray-600">Hành động này không thể hoàn tác. Tất cả bài nộp sẽ bị xóa vĩnh viễn.</p>
                </div>
                
                <div class="flex justify-center space-x-4">
                    <button onclick="closeDeleteModal()" 
                            class="btn-3d bg-gray-500 text-white px-8 py-3 rounded-xl font-semibold hover:bg-gray-600 transition-all duration-300">
                        <i class="fas fa-times mr-2"></i>Hủy bỏ
                    </button>
                    <button onclick="confirmDelete()" 
                            class="btn-3d bg-gradient-to-r from-red-500 to-red-600 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                        <i class="fas fa-trash mr-2"></i>Xóa bài tập
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let deleteAssignmentId = null;

        // Enhanced delete assignment
        function deleteAssignment(id) {
            deleteAssignmentId = id;
            document.getElementById('deleteModal').classList.remove('hidden');
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').classList.add('hidden');
            deleteAssignmentId = null;
        }

        function confirmDelete() {
            if (!deleteAssignmentId) return;

            const deleteBtn = document.querySelector('[onclick="confirmDelete()"]');
            const originalText = deleteBtn.innerHTML;
            deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Đang xóa...';
            deleteBtn.disabled = true;

            fetch(`/teacher/assignments/${deleteAssignmentId}/delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Remove card with animation
                    const card = document.querySelector(`[data-assignment-id="${deleteAssignmentId}"]`);
                    if (card) {
                        card.style.transform = 'scale(0.8)';
                        card.style.opacity = '0';
                        setTimeout(() => card.remove(), 300);
                    }
                    showNotification('Đã xóa bài tập thành công!', 'success');
                    updateStatistics();
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error(data.message || 'Có lỗi xảy ra');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification(error.message || 'Có lỗi xảy ra khi xóa bài tập', 'error');
            })
            .finally(() => {
                deleteBtn.disabled = false;
                deleteBtn.innerHTML = originalText;
                closeDeleteModal();
            });
        }

        // Edit assignment
        function editAssignment(id) {
            window.location.href = `/teacher/edit_assignment/${id}`;
        }

        // Enhanced filtering system
        function filterAssignments() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const selectedClass = document.getElementById('classFilter').value;
            const selectedStatus = document.getElementById('statusFilter').value;
            
            const assignmentCards = document.querySelectorAll('.assignment-card');
            let visibleCount = 0;

            assignmentCards.forEach((card, index) => {
                const title = card.querySelector('h3').textContent.toLowerCase();
                const description = card.querySelector('p.text-gray-600').textContent.toLowerCase();
                const classId = card.getAttribute('data-class-id');
                const status = card.getAttribute('data-status');

                const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
                const matchesClass = selectedClass === 'all' || classId === selectedClass;
                const matchesStatus = selectedStatus === 'all' || status === selectedStatus;

                if (matchesSearch && matchesClass && matchesStatus) {
                    card.style.display = 'block';
                    card.style.animation = `slideIn 0.6s ease-out ${index * 0.05}s forwards`;
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });

            // Update counters
            document.getElementById('visibleCount').textContent = visibleCount;
            updateStatistics();
        }

        // Update statistics
        function updateStatistics() {
            const cards = Array.from(document.querySelectorAll('.assignment-card'));
            const visibleCards = cards.filter(card => card.style.display !== 'none');
            
            const activeCount = visibleCards.filter(card => card.getAttribute('data-status') === 'active').length;
            const expiredCount = visibleCards.filter(card => card.getAttribute('data-status') === 'expired').length;
            const totalCount = visibleCards.length;

            // Update stat numbers
            document.getElementById('activeAssignments').textContent = activeCount;
            document.getElementById('expiredAssignments').textContent = expiredCount;
            document.getElementById('activeCount').textContent = `${activeCount} đang hoạt động`;

            // Update progress bars
            const activePercent = totalCount > 0 ? (activeCount / totalCount) * 100 : 0;
            const expiredPercent = totalCount > 0 ? (expiredCount / totalCount) * 100 : 0;
            
            document.getElementById('activeProgress').style.width = `${activePercent}%`;
            document.getElementById('expiredProgress').style.width = `${expiredPercent}%`;

            // Update progress ring
            const totalProgress = totalCount > 0 ? (totalCount / <%= assignments.length %>) * 100 : 0;
            const circumference = 2 * Math.PI * 36;
            const offset = circumference - (totalProgress / 100) * circumference;
            
            const progressRing = document.getElementById('totalProgress');
            if (progressRing) {
                progressRing.style.strokeDashoffset = offset;
            }
        }

        // Enhanced notification system
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            const bgColor = type === 'success' ? 'from-green-500 to-green-600' : 'from-red-500 to-red-600';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
            
            notification.className = `fixed top-6 right-6 bg-gradient-to-r ${bgColor} text-white px-6 py-4 rounded-xl shadow-2xl transform translate-x-full transition-all duration-500 z-50`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="fas ${icon} text-xl mr-3"></i>
                    <span class="font-semibold">${message}</span>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => notification.remove(), 500);
            }, 3000);
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Filter event listeners
            document.getElementById('searchInput').addEventListener('input', filterAssignments);
            document.getElementById('classFilter').addEventListener('change', filterAssignments);
            document.getElementById('statusFilter').addEventListener('change', filterAssignments);

            // Close modal on outside click
            document.getElementById('deleteModal').addEventListener('click', function(e) {
                if (e.target === this) closeDeleteModal();
            });

            // Initial filter and stats update
            filterAssignments();
            updateStatistics();

            // Initialize animations
            const elements = document.querySelectorAll('.slide-in');
            elements.forEach((element, index) => {
                setTimeout(() => {
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Update countdown timers every minute
            setInterval(updateCountdowns, 60000);
        });

        // Update countdown timers
        function updateCountdowns() {
            const countdownElements = document.querySelectorAll('.countdown-timer');
            countdownElements.forEach(element => {
                // This would update the countdown in real-time
                // Implementation depends on the specific requirements
            });
        }
    </script>
</body>
</html>
