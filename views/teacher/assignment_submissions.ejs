<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Danh sách bài nộp - <%= assignment.title %> | Giảng viên</title>
    <link rel="stylesheet" href="/style/style.css">
    <link rel="stylesheet" href="/style/teacher.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .card-hover {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .card-hover:hover {
            transform: translateY(-3px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }
        
        .floating-animation {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-8px); }
        }
        
        .slide-in {
            animation: slideIn 0.6s ease-out forwards;
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .btn-3d {
            position: relative;
            transform-style: preserve-3d;
            transition: all 0.3s ease;
        }
        
        .btn-3d:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
        
        .pulse-animation {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
        
        .submission-row {
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
        }
        
        .submission-row:hover {
            background: linear-gradient(90deg, rgba(102, 126, 234, 0.05), transparent);
            border-left-color: #667eea;
        }
        
        .grade-input {
            transition: all 0.3s ease;
        }
        
        .grade-input:focus {
            transform: scale(1.05);
            box-shadow: 0 0 15px rgba(102, 126, 234, 0.3);
        }
        
        .file-icon {
            position: relative;
            display: inline-block;
        }
        
        .file-icon::after {
            content: '';
            position: absolute;
            top: -2px;
            right: -2px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #10b981;
            opacity: 0;
            animation: filePulse 2s infinite;
        }
        
        @keyframes filePulse {
            0%, 100% { opacity: 0; transform: scale(0.8); }
            50% { opacity: 1; transform: scale(1.2); }
        }
        
        .progress-circle {
            position: relative;
            width: 60px;
            height: 60px;
        }
        
        .progress-circle svg {
            width: 100%;
            height: 100%;
            transform: rotate(-90deg);
        }
        
        .progress-circle .progress-ring {
            fill: none;
            stroke-width: 4;
            stroke-linecap: round;
            transition: stroke-dasharray 0.5s ease;
        }
        
        .modal-overlay {
            backdrop-filter: blur(5px);
            animation: fadeIn 0.3s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .modal-content {
            animation: modalSlideIn 0.3s ease;
        }
        
        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: scale(0.9) translateY(-20px);
            }
            to {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }
        
        .stat-card {
            position: relative;
            overflow: hidden;
        }
        
        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.6s;
        }
        
        .stat-card:hover::before {
            left: 100%;
        }
        
        .filter-dropdown {
            position: relative;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(102, 126, 234, 0.2);
        }
        
        .filter-dropdown:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .action-button {
            position: relative;
            overflow: hidden;
        }
        
        .action-button::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transition: all 0.3s ease;
            transform: translate(-50%, -50%);
        }
        
        .action-button:hover::before {
            width: 100%;
            height: 100%;
        }
        
        .grade-badge {
            position: relative;
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.875rem;
        }
        
        .grade-excellent {
            background: linear-gradient(135deg, #10b981, #34d399);
            color: white;
        }
        
        .grade-good {
            background: linear-gradient(135deg, #3b82f6, #60a5fa);
            color: white;
        }
        
        .grade-average {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
            color: white;
        }
        
        .grade-poor {
            background: linear-gradient(135deg, #ef4444, #f87171);
            color: white;
        }
        
        .grade-pending {
            background: linear-gradient(135deg, #6b7280, #9ca3af);
            color: white;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 min-h-screen">
    <div class="flex h-screen">
        <%- include('../partials/teacher_sidebar') %>

        <div class="flex-1 flex flex-col overflow-hidden">
            <%- include('../partials/dashboards_header') %>

            <main class="flex-1 overflow-x-hidden overflow-y-auto p-6">
                <!-- Hero Section -->
                <div class="mb-8">
                    <div class="gradient-bg rounded-3xl p-8 text-white relative overflow-hidden slide-in">
                        <div class="absolute top-0 right-0 w-32 h-32 bg-white opacity-10 rounded-full transform translate-x-8 -translate-y-8 floating-animation"></div>
                        <div class="absolute bottom-0 left-0 w-24 h-24 bg-white opacity-10 rounded-full transform -translate-x-4 translate-y-4 floating-animation" style="animation-delay: 1s;"></div>
                        
                        <div class="relative z-10">
                            <!-- Breadcrumb -->
                            <nav class="flex items-center text-white text-opacity-80 mb-6">
                                <a href="/teacher/classes/<%= assignment.class._id %>" class="hover:text-white transition-colors">
                                    <i class="fas fa-arrow-left mr-2"></i>Quay lại lớp học
                                </a>
                                <span class="mx-3">/</span>
                                <span>Danh sách bài nộp</span>
                            </nav>
                            
                            <div class="flex justify-between items-start">
                                <div>
                                    <h1 class="text-4xl font-bold mb-4"><%= assignment.title %></h1>
                                    <div class="space-y-2 text-lg opacity-90">
                                        <p><i class="fas fa-chalkboard-teacher mr-2"></i>Lớp: <%= assignment.class.name %></p>
                                        <p><i class="fas fa-calendar-alt mr-2"></i>Hạn nộp: <%= new Date(assignment.dueDate).toLocaleDateString('vi-VN') %></p>
                                        <p><i class="fas fa-clock mr-2"></i>Thời gian còn lại: 
                                            <% 
                                            const now = new Date();
                                            const dueDate = new Date(assignment.dueDate);
                                            const timeDiff = dueDate - now;
                                            const daysLeft = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
                                            %>
                                            <span class="<%= daysLeft > 0 ? 'text-green-300' : 'text-red-300' %>">
                                                <%= daysLeft > 0 ? `${daysLeft} ngày` : 'Đã hết hạn' %>
                                            </span>
                                        </p>
                                    </div>
                                </div>
                                
                                <!-- Progress Circle -->
                                <div class="text-center">
                                    <div class="progress-circle mb-2">
                                        <% 
                                        const gradedCount = submissions.filter(s => s.grade && s.grade.score !== undefined).length;
                                        const totalCount = submissions.length;
                                        const percentage = totalCount > 0 ? Math.round((gradedCount / totalCount) * 100) : 0;
                                        const circumference = 2 * Math.PI * 26;
                                        const strokeDasharray = `${(percentage / 100) * circumference} ${circumference}`;
                                        %>
                                        <svg>
                                            <circle cx="30" cy="30" r="26" stroke="rgba(255,255,255,0.3)" class="progress-ring"></circle>
                                            <circle cx="30" cy="30" r="26" stroke="#10b981" class="progress-ring" style="stroke-dasharray: <%= strokeDasharray %>"></circle>
                                        </svg>
                                        <div class="absolute inset-0 flex items-center justify-center">
                                            <span class="text-lg font-bold"><%= percentage %>%</span>
                                        </div>
                                    </div>
                                    <p class="text-sm opacity-80">Tiến độ chấm điểm</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Enhanced Stats Section -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.1s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-blue-100 text-blue-600 floating-animation">
                                <i class="fas fa-file-alt text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-gray-800"><%= submissions.length %></p>
                                <p class="text-sm text-gray-500">Tổng bài nộp</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-blue-500 h-2 rounded-full" style="width: 100%"></div>
                        </div>
                    </div>

                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.2s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-green-100 text-green-600 floating-animation" style="animation-delay: 0.5s;">
                                <i class="fas fa-check-circle text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-green-600">
                                    <%= submissions.filter(s => s.grade && s.grade.score !== undefined).length %>
                                </p>
                                <p class="text-sm text-gray-500">Đã chấm điểm</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-green-500 h-2 rounded-full" style="width: <%= percentage %>%"></div>
                        </div>
                    </div>

                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.3s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-yellow-100 text-yellow-600 floating-animation pulse-animation" style="animation-delay: 1s;">
                                <i class="fas fa-clock text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-yellow-600">
                                    <%= submissions.filter(s => !s.grade || s.grade.score === undefined).length %>
                                </p>
                                <p class="text-sm text-gray-500">Chờ chấm điểm</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-yellow-500 h-2 rounded-full" style="width: <%= 100 - percentage %>%"></div>
                        </div>
                    </div>

                    <div class="stat-card glass-card rounded-2xl p-6 card-hover slide-in" style="animation-delay: 0.4s;">
                        <div class="flex items-center justify-between mb-4">
                            <div class="p-3 rounded-full bg-purple-100 text-purple-600 floating-animation" style="animation-delay: 1.5s;">
                                <i class="fas fa-chart-line text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <% 
                                const gradedSubmissions = submissions.filter(s => s.grade && s.grade.score !== undefined);
                                const averageScore = gradedSubmissions.length > 0 ? 
                                    (gradedSubmissions.reduce((sum, s) => sum + s.grade.score, 0) / gradedSubmissions.length).toFixed(1) : 0;
                                %>
                                <p class="text-3xl font-bold text-purple-600"><%= averageScore %></p>
                                <p class="text-sm text-gray-500">Điểm trung bình</p>
                            </div>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-purple-500 h-2 rounded-full" style="width: <%= averageScore * 10 %>%"></div>
                        </div>
                    </div>
                </div>

                <!-- Filter Section -->
                <div class="glass-card rounded-2xl p-6 mb-8 slide-in">
                    <div class="flex flex-col lg:flex-row justify-between items-center gap-4">
                        <div>
                            <h2 class="text-2xl font-bold gradient-text mb-2">Quản lý bài nộp</h2>
                            <p class="text-gray-600">Chấm điểm và phản hồi cho từng bài nộp</p>
                        </div>
                        
                        <div class="flex flex-col sm:flex-row gap-4">
                            <!-- Search Input -->
                            <div class="relative">
                                <input type="text" 
                                       id="studentSearch" 
                                       placeholder="Tìm kiếm học viên..." 
                                       class="filter-dropdown w-80 pl-12 pr-4 py-3 rounded-xl focus:outline-none transition-all duration-300">
                                <i class="fas fa-search absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                            </div>
                            
                            <!-- Grade Status Filter -->
                            <select id="gradeFilter" class="filter-dropdown px-4 py-3 rounded-xl focus:outline-none transition-all duration-300">
                                <option value="all">Tất cả trạng thái</option>
                                <option value="graded">Đã chấm điểm</option>
                                <option value="ungraded">Chưa chấm điểm</option>
                                <option value="excellent">Xuất sắc (8-10)</option>
                                <option value="good">Tốt (6-8)</option>
                                <option value="average">Trung bình (4-6)</option>
                                <option value="poor">Yếu (0-4)</option>
                            </select>
                            
                            <!-- Export Button -->
                            <button class="btn-3d bg-gradient-to-r from-green-500 to-teal-500 text-white px-6 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                                <i class="fas fa-download mr-2"></i>
                                Xuất Excel
                            </button>
                        </div>
                    </div>
                    
                    <!-- Counter -->
                    <div class="mt-4 text-center">
                        <span class="text-sm text-gray-600">
                            Hiển thị: <span id="visibleCount" class="font-semibold text-purple-600">0</span>/<span id="totalCount" class="font-semibold text-purple-600"><%= submissions.length %></span> bài nộp
                        </span>
                    </div>
                </div>

                <!-- Submissions List -->
                <div class="glass-card rounded-2xl shadow-2xl overflow-hidden slide-in">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-xl font-bold gradient-text">Danh sách bài nộp</h3>
                    </div>
                    
                    <% if (submissions.length > 0) { %>
                        <div class="overflow-x-auto">
                            <table class="min-w-full">
                                <thead class="bg-gradient-to-r from-gray-50 to-gray-100">
                                    <tr>
                                        <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                            <i class="fas fa-user mr-2"></i>Học viên
                                        </th>
                                        <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                            <i class="fas fa-clock mr-2"></i>Thời gian nộp
                                        </th>
                                        <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                            <i class="fas fa-file mr-2"></i>File
                                        </th>
                                        <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                            <i class="fas fa-star mr-2"></i>Điểm số
                                        </th>
                                        <th class="px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">
                                            <i class="fas fa-cogs mr-2"></i>Thao tác
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-100">
                                    <% submissions.forEach((submission, index) => { %>
                                        <tr class="submission-row slide-in" style="animation-delay: <%= index * 0.1 %>s;">
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="flex items-center">
                                                    <div class="w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4 floating-animation" style="animation-delay: <%= index * 0.2 %>s;">
                                                        <%= submission.student.fullName.charAt(0).toUpperCase() %>
                                                    </div>
                                                    <div>
                                                        <div class="text-sm font-semibold text-gray-900">
                                                            <%= submission.student.fullName %>
                                                        </div>
                                                        <div class="text-sm text-gray-500">
                                                            <%= submission.student.email %>
                                                        </div>
                                                        <div class="text-xs text-gray-400">
                                                            ID: <%= submission.student._id.toString().slice(-6) %>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="text-sm text-gray-900 font-medium">
                                                    <%= new Date(submission.submittedAt).toLocaleDateString('vi-VN') %>
                                                </div>
                                                <div class="text-xs text-gray-500">
                                                    <%= new Date(submission.submittedAt).toLocaleTimeString('vi-VN') %>
                                                </div>
                                                <% 
                                                const submitTime = new Date(submission.submittedAt);
                                                const dueTime = new Date(assignment.dueDate);
                                                const isLate = submitTime > dueTime;
                                                %>
                                                <% if (isLate) { %>
                                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 mt-1">
                                                        <i class="fas fa-exclamation-triangle mr-1"></i>Nộp trễ
                                                    </span>
                                                <% } else { %>
                                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 mt-1">
                                                        <i class="fas fa-check mr-1"></i>Đúng hạn
                                                    </span>
                                                <% } %>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="flex items-center text-sm text-gray-900">
                                                    <% const fileType = submission.fileType; %>
                                                    <div class="file-icon mr-3">
                                                        <% if (fileType === 'pdf') { %>
                                                            <i class="fas fa-file-pdf text-red-500 text-2xl"></i>
                                                        <% } else if (['jpg', 'jpeg', 'png'].includes(fileType)) { %>
                                                            <i class="fas fa-file-image text-blue-500 text-2xl"></i>
                                                        <% } else if (fileType === 'mp4') { %>
                                                            <i class="fas fa-file-video text-purple-500 text-2xl"></i>
                                                        <% } else if (['doc', 'docx'].includes(fileType)) { %>
                                                            <i class="fas fa-file-word text-blue-600 text-2xl"></i>
                                                        <% } else { %>
                                                            <i class="fas fa-file text-gray-500 text-2xl"></i>
                                                        <% } %>
                                                    </div>
                                                    <div>
                                                        <div class="font-medium"><%= submission.fileName %></div>
                                                        <div class="text-xs text-gray-500">
                                                            <%= (submission.fileSize / 1024).toFixed(2) %> KB
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="flex items-center space-x-3">
                                                    <% if (submission.grade && submission.grade.score !== undefined) { %>
                                                        <% const score = submission.grade.score; %>
                                                        <span class="grade-badge <%= 
                                                            score >= 8 ? 'grade-excellent' :
                                                            score >= 6 ? 'grade-good' :
                                                            score >= 4 ? 'grade-average' : 'grade-poor'
                                                        %>">
                                                            <%= score %>/10
                                                        </span>
                                                    <% } else { %>
                                                        <span class="grade-badge grade-pending pulse-animation">
                                                            Chưa chấm
                                                        </span>
                                                    <% } %>
                                                
                                                    <button onclick="openGradeModal('<%= submission._id %>', '<%= submission.student.fullName %>', '<%= submission.grade?.score || '' %>', '<%= submission.grade?.feedback || '' %>')"
                                                            class="action-button btn-3d bg-gradient-to-r from-indigo-500 to-purple-500 text-white px-4 py-2 rounded-xl hover:shadow-lg transition-all duration-300 text-sm font-semibold">
                                                        <i class="fas fa-star mr-1"></i>
                                                        <%= submission.grade && submission.grade.score !== undefined ? 'Cập nhật' : 'Chấm điểm' %>
                                                    </button>
                                                </div>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="flex space-x-2">
                                                    <a href="/uploads/assignments/<%= submission.fileName %>" 
                                                       target="_blank"
                                                       class="action-button btn-3d bg-blue-500 text-white px-3 py-2 rounded-xl hover:bg-blue-600 transition-all duration-300 text-sm">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="/teacher/download-submission/<%= submission.fileName %>"
                                                       class="action-button btn-3d bg-green-500 text-white px-3 py-2 rounded-xl hover:bg-green-600 transition-all duration-300 text-sm">
                                                        <i class="fas fa-download"></i>
                                                    </a>
                                                    <% if (submission.grade && submission.grade.feedback) { %>
                                                        <button onclick="viewFeedback('<%= submission.grade.feedback %>')"
                                                                class="action-button btn-3d bg-yellow-500 text-white px-3 py-2 rounded-xl hover:bg-yellow-600 transition-all duration-300 text-sm">
                                                            <i class="fas fa-comment"></i>
                                                        </button>
                                                    <% } %>
                                                </div>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                        
                        <!-- Bulk Actions -->
                        <div class="p-6 border-t border-gray-200 bg-gray-50">
                            <div class="flex justify-between items-center">
                                <div class="flex items-center space-x-4">
                                    <label class="flex items-center">
                                        <input type="checkbox" id="selectAll" class="w-4 h-4 text-purple-600 rounded">
                                        <span class="ml-2 text-sm text-gray-600">Chọn tất cả</span>
                                    </label>
                                    <span id="selectedCount" class="text-sm text-gray-500">0 bài được chọn</span>
                                </div>
                                
                                <div class="flex space-x-3">
                                    <button id="bulkGradeBtn" class="btn-3d bg-purple-500 text-white px-4 py-2 rounded-xl hover:bg-purple-600 transition-all duration-300 text-sm font-semibold disabled:opacity-50" disabled>
                                        <i class="fas fa-star mr-2"></i>Chấm điểm hàng loạt
                                    </button>
                                    <button id="downloadSelectedBtn" class="btn-3d bg-green-500 text-white px-4 py-2 rounded-xl hover:bg-green-600 transition-all duration-300 text-sm font-semibold disabled:opacity-50" disabled>
                                        <i class="fas fa-download mr-2"></i>Tải xuống đã chọn
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% } else { %>
                        <div class="text-center py-16">
                            <div class="floating-animation mb-6">
                                <i class="fas fa-inbox text-8xl text-gray-300"></i>
                            </div>
                            <h3 class="text-2xl font-bold text-gray-600 mb-4">Chưa có bài nộp nào</h3>
                            <p class="text-gray-400 mb-8">Học viên sẽ nộp bài tập ở đây khi hoàn thành</p>
                            <button class="btn-3d bg-gradient-to-r from-blue-500 to-purple-500 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                                <i class="fas fa-bell mr-2"></i>
                                Nhắc nhở học viên
                            </button>
                        </div>
                    <% } %>
                </div>
            </main>
        </div>
    </div>

    <!-- Enhanced Grade Modal -->
    <div id="gradeModal" class="fixed inset-0 bg-black bg-opacity-50 hidden modal-overlay z-50">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content glass-card rounded-3xl shadow-2xl w-full max-w-2xl">
                <div class="p-8">
                    <div class="flex justify-between items-center mb-8">
                        <h3 class="text-3xl font-bold gradient-text">Chấm điểm bài nộp</h3>
                        <button onclick="closeGradeModal()" class="text-gray-400 hover:text-gray-600 text-2xl">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    
                    <div class="mb-6">
                        <div class="flex items-center mb-4">
                            <div class="w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                <i class="fas fa-user"></i>
                            </div>
                            <div>
                                <p class="font-semibold text-gray-800" id="modalStudentName">Tên học viên</p>
                                <p class="text-sm text-gray-500">Bài nộp cần chấm điểm</p>
                            </div>
                        </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-lg font-semibold text-gray-800 mb-3">
                                <i class="fas fa-star text-yellow-500 mr-2"></i>
                                Điểm số (0-10)
                            </label>
                            <input type="number" 
                                   id="modalScore"
                                   min="0" 
                                   max="10" 
                                   step="0.1"
                                   class="grade-input w-full p-4 border-2 border-gray-200 rounded-xl focus:border-purple-500 focus:outline-none text-lg text-center font-bold">
                            <div class="mt-2 flex justify-between text-sm text-gray-500">
                                <span>Tối thiểu: 0</span>
                                <span>Tối đa: 10</span>
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-lg font-semibold text-gray-800 mb-3">
                                <i class="fas fa-chart-bar text-blue-500 mr-2"></i>
                                Mức độ
                            </label>
                            <div id="gradeLevel" class="p-4 rounded-xl text-center font-bold text-lg">
                                <span class="grade-badge grade-pending">Chưa nhập điểm</span>
                            </div>
                        </div>
                    </div>

                    <div class="mt-6">
                        <label class="block text-lg font-semibold text-gray-800 mb-3">
                            <i class="fas fa-comment text-green-500 mr-2"></i>
                            Nhận xét chi tiết
                        </label>
                        <textarea id="modalFeedback"
                                  class="w-full p-4 border-2 border-gray-200 rounded-xl focus:border-green-500 focus:outline-none resize-none text-lg"
                                  rows="4"
                                  placeholder="Nhập nhận xét về bài làm của học viên..."></textarea>
                        <div class="mt-2 text-sm text-gray-500">
                            <span id="feedbackCount">0</span> / 500 ký tự
                        </div>
                    </div>

                    <div class="flex justify-end space-x-4 mt-8">
                        <button onclick="closeGradeModal()"
                                class="btn-3d bg-gray-500 text-white px-8 py-3 rounded-xl font-semibold hover:bg-gray-600 transition-all duration-300">
                            <i class="fas fa-times mr-2"></i>Hủy
                        </button>
                        <button onclick="submitGrade()"
                                class="btn-3d bg-gradient-to-r from-purple-500 to-pink-500 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
                            <i class="fas fa-save mr-2"></i>Lưu điểm
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Feedback Modal -->
    <div id="feedbackModal" class="fixed inset-0 bg-black bg-opacity-50 hidden modal-overlay z-50">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content glass-card rounded-3xl shadow-2xl w-full max-w-lg">
                <div class="p-8">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-2xl font-bold gradient-text">Nhận xét của giảng viên</h3>
                        <button onclick="closeFeedbackModal()" class="text-gray-400 hover:text-gray-600 text-xl">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    
                    <div class="bg-gray-50 rounded-xl p-4 mb-6">
                        <p id="feedbackContent" class="text-gray-700 leading-relaxed"></p>
                    </div>
                    
                    <div class="flex justify-end">
                        <button onclick="closeFeedbackModal()"
                                class="btn-3d bg-blue-500 text-white px-6 py-2 rounded-xl font-semibold hover:bg-blue-600 transition-all duration-300">
                            Đóng
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentSubmissionId = null;

        // Enhanced grade modal
        function openGradeModal(submissionId, studentName, currentScore, currentFeedback) {
            currentSubmissionId = submissionId;
            document.getElementById('modalStudentName').textContent = studentName;
            document.getElementById('modalScore').value = currentScore;
            document.getElementById('modalFeedback').value = currentFeedback;
            updateGradeLevel(currentScore);
            updateFeedbackCount();
            document.getElementById('gradeModal').classList.remove('hidden');
        }

        function closeGradeModal() {
            document.getElementById('gradeModal').classList.add('hidden');
            currentSubmissionId = null;
        }

        // Grade level indicator
        function updateGradeLevel(score) {
            const gradeLevel = document.getElementById('gradeLevel');
            const gradeSpan = gradeLevel.querySelector('span');
            
            if (!score) {
                gradeSpan.className = 'grade-badge grade-pending';
                gradeSpan.innerHTML = '<i class="fas fa-question mr-1"></i>Chưa nhập điểm';
            } else if (score >= 8) {
                gradeSpan.className = 'grade-badge grade-excellent';
                gradeSpan.innerHTML = '<i class="fas fa-trophy mr-1"></i>Xuất sắc';
            } else if (score >= 6) {
                gradeSpan.className = 'grade-badge grade-good';
                gradeSpan.innerHTML = '<i class="fas fa-thumbs-up mr-1"></i>Tốt';
            } else if (score >= 4) {
                gradeSpan.className = 'grade-badge grade-average';
                gradeSpan.innerHTML = '<i class="fas fa-minus mr-1"></i>Trung bình';
            } else {
                gradeSpan.className = 'grade-badge grade-poor';
                gradeSpan.innerHTML = '<i class="fas fa-thumbs-down mr-1"></i>Yếu';
            }
        }

        // Feedback character counter
        function updateFeedbackCount() {
            const feedback = document.getElementById('modalFeedback');
            const count = document.getElementById('feedbackCount');
            count.textContent = feedback.value.length;
            
            if (feedback.value.length > 450) {
                count.style.color = '#ef4444';
            } else {
                count.style.color = '#6b7280';
            }
        }

        // Enhanced submit grade
        function submitGrade() {
            if (!currentSubmissionId) {
                showNotification('Không tìm thấy bài nộp', 'error');
                return;
            }

            const score = document.getElementById('modalScore').value;
            const feedback = document.getElementById('modalFeedback').value;

            if (!score || isNaN(score) || score < 0 || score > 10) {
                showNotification('Điểm số phải từ 0 đến 10', 'error');
                return;
            }

            const submitButton = document.querySelector('[onclick="submitGrade()"]');
            const originalText = submitButton.innerHTML;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Đang lưu...';
            submitButton.disabled = true;

            fetch(`/grade-submission/${currentSubmissionId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({
                    score: parseFloat(score),
                    feedback: feedback
                })
            })
            .then(async response => {
                const data = await response.json();
                if (!response.ok) {
                    throw new Error(data.message || 'Có lỗi xảy ra');
                }
                return data;
            })
            .then(data => {
                if (data.success) {
                    // Update UI
                    updateSubmissionRow(currentSubmissionId, score, feedback);
                    closeGradeModal();
                    showNotification(data.message || 'Đã lưu điểm thành công!', 'success');
                    updateStatistics();
                } else {
                    throw new Error(data.message || 'Có lỗi xảy ra');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification(error.message || 'Có lỗi xảy ra khi lưu điểm', 'error');
            })
            .finally(() => {
                submitButton.disabled = false;
                submitButton.innerHTML = originalText;
            });
        }

        // Update submission row after grading
        function updateSubmissionRow(submissionId, score, feedback) {
            const row = document.querySelector(`tr:has(button[onclick*="${submissionId}"])`);
            if (row) {
                const gradeCell = row.querySelector('td:nth-child(4)');
                let gradeBadgeClass = '';
                let gradeText = '';
                
                if (score >= 8) {
                    gradeBadgeClass = 'grade-excellent';
                    gradeText = '<i class="fas fa-trophy mr-1"></i>';
                } else if (score >= 6) {
                    gradeBadgeClass = 'grade-good';
                    gradeText = '<i class="fas fa-thumbs-up mr-1"></i>';
                } else if (score >= 4) {
                    gradeBadgeClass = 'grade-average';
                    gradeText = '<i class="fas fa-minus mr-1"></i>';
                } else {
                    gradeBadgeClass = 'grade-poor';
                    gradeText = '<i class="fas fa-thumbs-down mr-1"></i>';
                }
                
                gradeCell.innerHTML = `
                    <div class="flex items-center space-x-3">
                        <span class="grade-badge ${gradeBadgeClass}">
                            ${gradeText}${score}/10
                        </span>
                        <button onclick="openGradeModal('${submissionId}', '${row.querySelector('.text-sm.font-semibold').textContent}', '${score}', '${feedback}')"
                                class="action-button btn-3d bg-gradient-to-r from-indigo-500 to-purple-500 text-white px-4 py-2 rounded-xl hover:shadow-lg transition-all duration-300 text-sm font-semibold">
                            <i class="fas fa-star mr-1"></i>Cập nhật
                        </button>
                    </div>
                `;
                
                // Add feedback button if feedback exists
                if (feedback) {
                    const actionCell = row.querySelector('td:nth-child(5) .flex');
                    const feedbackBtn = actionCell.querySelector('.bg-yellow-500');
                    if (!feedbackBtn) {
                        actionCell.insertAdjacentHTML('beforeend', `
                            <button onclick="viewFeedback('${feedback}')"
                                    class="action-button btn-3d bg-yellow-500 text-white px-3 py-2 rounded-xl hover:bg-yellow-600 transition-all duration-300 text-sm">
                                <i class="fas fa-comment"></i>
                            </button>
                        `);
                    }
                }
            }
        }

        // View feedback modal
        function viewFeedback(feedback) {
            document.getElementById('feedbackContent').textContent = feedback;
            document.getElementById('feedbackModal').classList.remove('hidden');
        }

        function closeFeedbackModal() {
            document.getElementById('feedbackModal').classList.add('hidden');
        }

        // Enhanced notification system
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            const bgColor = type === 'success' ? 'from-green-500 to-green-600' : 'from-red-500 to-red-600';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
            
            notification.className = `fixed top-6 right-6 bg-gradient-to-r ${bgColor} text-white px-6 py-4 rounded-xl shadow-2xl transform translate-x-full transition-all duration-500 z-50`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="fas ${icon} text-xl mr-3"></i>
                    <span class="font-semibold">${message}</span>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => notification.remove(), 500);
            }, 3000);
        }

        // Update statistics
        function updateStatistics() {
            const visibleRows = Array.from(document.querySelectorAll('.submission-row')).filter(row => row.style.display !== 'none');
            const gradedCount = visibleRows.filter(row => 
                !row.querySelector('.grade-pending')
            ).length;
            
            // Update progress circle
            const totalVisible = visibleRows.length;
            const percentage = totalVisible > 0 ? Math.round((gradedCount / totalVisible) * 100) : 0;
            
            const progressText = document.querySelector('.progress-circle .absolute span');
            if (progressText) {
                progressText.textContent = `${percentage}%`;
            }
            
            // Update stat cards
            const statCards = document.querySelectorAll('.stat-card');
            if (statCards[1]) {
                statCards[1].querySelector('.text-3xl').textContent = gradedCount;
            }
            if (statCards[2]) {
                statCards[2].querySelector('.text-3xl').textContent = totalVisible - gradedCount;
            }
        }

        // Enhanced filtering
        document.addEventListener('DOMContentLoaded', function() {
            const studentSearch = document.getElementById('studentSearch');
            const gradeFilter = document.getElementById('gradeFilter');
            const tableRows = document.querySelectorAll('.submission-row');
            const visibleCount = document.getElementById('visibleCount');

            function filterSubmissions() {
                const searchTerm = studentSearch.value.toLowerCase();
                const selectedGrade = gradeFilter.value;
                let visibleRows = 0;

                tableRows.forEach(row => {
                    const studentName = row.querySelector('.text-sm.font-semibold').textContent.toLowerCase();
                    const studentEmail = row.querySelector('.text-sm.text-gray-500').textContent.toLowerCase();
                    const gradeElement = row.querySelector('.grade-badge');
                    
                    let hasGrade = false;
                    let gradeValue = 0;
                    
                    if (gradeElement && !gradeElement.classList.contains('grade-pending')) {
                        hasGrade = true;
                        const gradeText = gradeElement.textContent;
                        gradeValue = parseFloat(gradeText.split('/')[0]) || 0;
                    }
                    
                    const matchesSearch = studentName.includes(searchTerm) || studentEmail.includes(searchTerm);
                    const matchesGrade = selectedGrade === 'all' || 
                                       (selectedGrade === 'graded' && hasGrade) ||
                                       (selectedGrade === 'ungraded' && !hasGrade) ||
                                       (selectedGrade === 'excellent' && gradeValue >= 8) ||
                                       (selectedGrade === 'good' && gradeValue >= 6 && gradeValue < 8) ||
                                       (selectedGrade === 'average' && gradeValue >= 4 && gradeValue < 6) ||
                                       (selectedGrade === 'poor' && gradeValue < 4 && hasGrade);

                    if (matchesSearch && matchesGrade) {
                        row.style.display = '';
                        visibleRows++;
                    } else {
                        row.style.display = 'none';
                    }
                });

                visibleCount.textContent = visibleRows;
                updateStatistics();
            }

            // Event listeners
            studentSearch.addEventListener('input', filterSubmissions);
            gradeFilter.addEventListener('change', filterSubmissions);

            // Score input listener
            document.getElementById('modalScore').addEventListener('input', function() {
                updateGradeLevel(this.value);
            });

            // Feedback counter
            document.getElementById('modalFeedback').addEventListener('input', updateFeedbackCount);

            // Close modals on outside click
            document.getElementById('gradeModal').addEventListener('click', function(e) {
                if (e.target === this) closeGradeModal();
            });

            document.getElementById('feedbackModal').addEventListener('click', function(e) {
                if (e.target === this) closeFeedbackModal();
            });

            // Initial filter
            filterSubmissions();

            // Initialize animations
            const elements = document.querySelectorAll('.slide-in');
            elements.forEach((element, index) => {
                setTimeout(() => {
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
</body>
</html>