<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đặt lại mật khẩu - Korea_DB</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <%- include('partials/Header') %>
    <style>
        body {
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .reset-container {
            min-height: 50vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

        .reset-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
            max-width: 450px;
            padding: 1.5rem 1.25rem;
            text-align: center;
        }

        .reset-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 1.5rem;
            color: white;
        }

        .reset-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 0.75rem;
        }

        .reset-subtitle {
            color: #6b7280;
            margin-bottom: 1.5rem;
            font-size: 0.9rem;
            line-height: 1.5;
        }

        .form-group {
            margin-bottom: 1.5rem;
            text-align: left;
        }

        .form-label {
            font-weight: 600;
            color: #374151;
            margin-bottom: 0.4rem;
            display: block;
            font-size: 0.9rem;
        }

        .form-input {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background: white;
            color: #1f2937;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-text {
            font-size: 0.8rem;
            color: #6b7280;
            margin-top: 0.4rem;
        }

        .btn-reset {
            width: 100%;
            padding: 0.8rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 10px;
            color: white;
            font-size: 0.95rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 1rem 0 0.5rem 0;
        }

        .btn-reset:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-reset:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: #6b7280;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            margin-top: 1rem;
        }

        .back-link:hover {
            color: #667eea;
            text-decoration: none;
        }

        /* Password Strength Indicator */
        .password-strength {
            margin-top: 0.5rem;
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.8rem;
            font-weight: 500;
            text-align: center;
        }

        .password-strength.weak {
            background: #fef2f2;
            color: #dc2626;
            border: 1px solid #fecaca;
        }

        .password-strength.medium {
            background: #fffbeb;
            color: #d97706;
            border: 1px solid #fed7aa;
        }

        .password-strength.strong {
            background: #f0fdf4;
            color: #16a34a;
            border: 1px solid #bbf7d0;
        }

        /* Toast Notification System */
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            max-width: 400px;
        }

        .toast {
            background: white;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
            overflow: hidden;
            transform: translateX(400px);
            transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            border-left: 4px solid;
        }

        .toast.show {
            transform: translateX(0);
        }

        .toast.success {
            border-left-color: #10b981;
        }

        .toast.error {
            border-left-color: #ef4444;
        }

        .toast-content {
            padding: 16px 20px;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .toast-icon {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            color: white;
            flex-shrink: 0;
        }

        .toast.success .toast-icon {
            background: #10b981;
        }

        .toast.error .toast-icon {
            background: #ef4444;
        }

        .toast-message {
            flex: 1;
            font-size: 14px;
            font-weight: 500;
            color: #374151;
            line-height: 1.4;
        }

        .toast-close {
            background: none;
            border: none;
            color: #9ca3af;
            cursor: pointer;
            font-size: 16px;
            padding: 0;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.2s ease;
            flex-shrink: 0;
        }

        .toast-close:hover {
            background: #f3f4f6;
            color: #6b7280;
        }

        @media (max-width: 768px) {
            .reset-card {
                padding: 1.5rem 1.25rem;
                margin: 1rem;
            }
            
            .reset-title {
                font-size: 1.25rem;
            }

            .toast-container {
                top: 10px;
                right: 10px;
                left: 10px;
                max-width: none;
            }

            .toast {
                transform: translateY(-100px);
            }

            .toast.show {
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <!-- Toast Container -->
    <div class="toast-container" id="toastContainer"></div>
    
    <section class="reset-container">
        <div class="reset-card">
            <div class="reset-icon">
                <i class="fas fa-key"></i>
            </div>
            
            <h2 class="reset-title">Đặt lại mật khẩu</h2>
            <p class="reset-subtitle">Nhập mật khẩu mới cho tài khoản của bạn</p>

            <form id="resetPasswordForm">
                <input type="hidden" name="email" value="<%= email %>">
                <input type="hidden" name="code" value="<%= code %>">

                <div class="form-group">
                    <label for="password" class="form-label">
                        <i class="fas fa-lock"></i>
                        Mật khẩu mới
                    </label>
                    <input type="password" 
                           class="form-input" 
                           id="password" 
                           name="password" 
                           required 
                           minlength="6"
                           placeholder="Nhập mật khẩu mới">
                    <div id="passwordStrength" class="password-strength" style="display: none;"></div>
                </div>

                <div class="form-group">
                    <label for="confirmPassword" class="form-label">
                        <i class="fas fa-lock"></i>
                        Xác nhận mật khẩu
                    </label>
                    <input type="password" 
                           class="form-input" 
                           id="confirmPassword" 
                           name="confirmPassword" 
                           required 
                           minlength="6"
                           placeholder="Nhập lại mật khẩu mới">
                    <div id="passwordMatch" class="form-text"></div>
                </div>

                <button type="submit" class="btn-reset">
                    <i class="fas fa-key"></i>
                    Đặt lại mật khẩu
                </button>
            </form>

            <a href="/login" class="back-link">
                <i class="fas fa-arrow-left"></i>
                Quay lại đăng nhập
            </a>
        </div>
    </section>

    <%- include('partials/Footer') %>

    <% if (typeof error !== 'undefined' && error) { %>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                showToast('<%= error %>', 'error');
            });
        </script>
    <% } %>
    
    <% if (typeof message !== 'undefined' && message) { %>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                showToast('<%= message %>', 'success');
            });
        </script>
    <% } %>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Toast Notification System
        function showToast(message, type = 'success') {
            const container = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            const iconClass = type === 'success' ? 'fas fa-check' : 'fas fa-times';
            
            toast.innerHTML = `
                <div class="toast-content">
                    <div class="toast-icon">
                        <i class="${iconClass}"></i>
                    </div>
                    <div class="toast-message">${message}</div>
                    <button class="toast-close" onclick="hideToast(this)">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;
            
            container.appendChild(toast);
            
            // Show toast
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            // Auto hide after 5 seconds
            setTimeout(() => {
                hideToast(toast.querySelector('.toast-close'));
            }, 5000);
        }

        function hideToast(button) {
            const toast = button.closest('.toast');
            toast.classList.remove('show');
            setTimeout(() => {
                toast.remove();
            }, 300);
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            const strengthIndicator = document.getElementById('passwordStrength');
            if (password.length === 0) {
                strengthIndicator.style.display = 'none';
                return;
            }

            strengthIndicator.style.display = 'block';
            let strength = 0;
            let feedback = '';

            // Length check
            if (password.length >= 6) strength++;
            if (password.length >= 8) strength++;

            // Character variety checks
            if (/[a-z]/.test(password)) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^A-Za-z0-9]/.test(password)) strength++;

            if (strength <= 2) {
                strengthIndicator.className = 'password-strength weak';
                feedback = 'Mật khẩu yếu - Cần cải thiện';
            } else if (strength <= 4) {
                strengthIndicator.className = 'password-strength medium';
                feedback = 'Mật khẩu trung bình - Khá tốt';
            } else {
                strengthIndicator.className = 'password-strength strong';
                feedback = 'Mật khẩu mạnh - Rất tốt!';
            }

            strengthIndicator.textContent = feedback;
        }

        // Password match checker
        function checkPasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const matchIndicator = document.getElementById('passwordMatch');

            if (confirmPassword.length === 0) {
                matchIndicator.textContent = '';
                matchIndicator.style.color = '#6b7280';
                return true;
            }

            if (password === confirmPassword) {
                matchIndicator.textContent = '✓ Mật khẩu khớp';
                matchIndicator.style.color = '#10b981';
                return true;
            } else {
                matchIndicator.textContent = '✗ Mật khẩu không khớp';
                matchIndicator.style.color = '#ef4444';
                return false;
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');

            passwordInput.addEventListener('input', function() {
                checkPasswordStrength(this.value);
                if (confirmPasswordInput.value) {
                    checkPasswordMatch();
                }
            });

            confirmPasswordInput.addEventListener('input', checkPasswordMatch);

            document.getElementById('resetPasswordForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const form = e.target;
                const submitBtn = form.querySelector('button[type="submit"]');
                const password = form.password.value;
                const confirmPassword = form.confirmPassword.value;

                if (password.length < 6) {
                    showToast('Mật khẩu phải có ít nhất 6 ký tự', 'error');
                    return;
                }

                if (password !== confirmPassword) {
                    showToast('Mật khẩu xác nhận không khớp', 'error');
                    return;
                }

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...';

                try {
                    const response = await fetch('/reset-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            email: form.email.value,
                            code: form.code.value,
                            password: password,
                            confirmPassword: confirmPassword
                        })
                    });

                    const data = await response.json();

                    if (data.success) {
                        showToast('Đặt lại mật khẩu thành công! Đang chuyển hướng...', 'success');
                        setTimeout(() => {
                            window.location.href = '/login';
                        }, 2000);
                    } else {
                        throw new Error(data.error || 'Có lỗi xảy ra khi đặt lại mật khẩu');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showToast(error.message || 'Có lỗi xảy ra. Vui lòng thử lại.', 'error');
                } finally {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<i class="fas fa-key"></i> Đặt lại mật khẩu';
                }
            });
        });
    </script>
</body>
</html>
