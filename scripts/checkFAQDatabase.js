const mongoose = require('mongoose');
const FAQ = require('../src/models/FAQ');

async function checkFAQs() {
    try {
        await mongoose.connect('mongodb://localhost:27017/korea_db');
        console.log('üîó ƒê√£ k·∫øt n·ªëi MongoDB');
        
        const questions = [
            'C√≥ ch·ª©ng ch·ªâ ho√†n th√†nh kh√¥ng?',
            'Gi√° c√°c kh√≥a h·ªçc ti·∫øng H√†n bao nhi√™u?',
            'M·ªôt l·ªõp h·ªçc c√≥ bao nhi√™u h·ªçc vi√™n?',
            'C√≥ th·ªÉ tr·∫£ g√≥p h·ªçc ph√≠ kh√¥ng?',
            'C√≥ ch√≠nh s√°ch ho√†n ti·ªÅn kh√¥ng?'
        ];
        
        console.log('üîç Ki·ªÉm tra c√°c c√¢u h·ªèi trong database:');
        let missingQuestions = [];
        
        for (const question of questions) {
            // T√¨m ki·∫øm v·ªõi regex linh ho·∫°t h∆°n
            const faq = await FAQ.findOne({ 
                $or: [
                    { question: { $regex: question.replace(/[?]/g, '').replace(/\s+/g, '.*'), $options: 'i' }},
                    { keywords: { $in: question.split(' ').filter(word => word.length > 2) }}
                ]
            });
            
            console.log(`${faq ? '‚úÖ' : '‚ùå'} ${question}`);
            if (faq) {
                console.log(`   C√¢u h·ªèi trong DB: ${faq.question}`);
                console.log(`   Category: ${faq.category}, Keywords: ${faq.keywords.join(', ')}`);
            } else {
                missingQuestions.push(question);
            }
        }
        
        const totalFAQs = await FAQ.countDocuments();
        console.log(`\nüìä T·ªïng s·ªë FAQ trong database: ${totalFAQs}`);
        
        if (missingQuestions.length > 0) {
            console.log('\n‚ùå C√°c c√¢u h·ªèi c√≤n thi·∫øu:');
            missingQuestions.forEach(q => console.log(`   - ${q}`));
        } else {
            console.log('\n‚úÖ T·∫•t c·∫£ c√¢u h·ªèi ƒë√£ c√≥ trong database!');
        }
        
        // Hi·ªÉn th·ªã m·ªôt s·ªë FAQ m·∫´u ƒë·ªÉ ki·ªÉm tra
        console.log('\nüìã M·ªôt s·ªë FAQ hi·ªán c√≥:');
        const sampleFAQs = await FAQ.find().limit(5);
        sampleFAQs.forEach(faq => {
            console.log(`   - ${faq.question} (${faq.category})`);
        });
        
        await mongoose.disconnect();
        process.exit(0);
    } catch (error) {
        console.error('‚ùå L·ªói:', error.message);
        process.exit(1);
    }
}

checkFAQs();
